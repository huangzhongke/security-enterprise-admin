{"remainingRequest":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\src\\views\\modules\\notice\\notice-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\src\\views\\modules\\notice\\notice-add-or-update.vue","mtime":1595727761914},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639029294232},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1639029293447},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639029294232},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1639029303663}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb29raWVzIGZyb20gJ2pzLWNvb2tpZScKaW1wb3J0IGRlYm91bmNlIGZyb20gJ2xvZGFzaC9kZWJvdW5jZScKaW1wb3J0ICdxdWlsbC9kaXN0L3F1aWxsLnNub3cuY3NzJwppbXBvcnQgUXVpbGwgZnJvbSAncXVpbGwnCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICBxdWlsbEVkaXRvcjogbnVsbCwKICAgICAgcXVpbGxFZGl0b3JUb29sYmFyT3B0aW9uczogWwogICAgICAgIFsnYm9sZCcsICdpdGFsaWMnLCAndW5kZXJsaW5lJywgJ3N0cmlrZSddLAogICAgICAgIFsnaW1hZ2UnXSwKICAgICAgICBbeyAnbGlzdCc6ICdvcmRlcmVkJyB9LCB7ICdsaXN0JzogJ2J1bGxldCcgfV0sCiAgICAgICAgW3sgJ3NpemUnOiBbJ3NtYWxsJywgZmFsc2UsICdsYXJnZScsICdodWdlJ10gfV0sCiAgICAgICAgW3sgJ2NvbG9yJzogW10gfSwgeyAnYmFja2dyb3VuZCc6IFtdIH1dLAogICAgICAgIFsnY2xlYW4nXQogICAgICBdLAogICAgICB1cGxvYWRVcmw6ICcnLAogICAgICBkZXB0TGlzdDogW10sCiAgICAgIGRhdGFGb3JtOiB7CiAgICAgICAgaWQ6ICcnLAogICAgICAgIHR5cGU6IDAsCiAgICAgICAgdGl0bGU6ICcnLAogICAgICAgIGNvbnRlbnQ6ICcnLAogICAgICAgIHJlY2VpdmVyVHlwZTogMCwKICAgICAgICByZWNlaXZlclR5cGVJZHM6ICcnLAogICAgICAgIHJlY2VpdmVyVHlwZUxpc3Q6IFtdLAogICAgICAgIHN0YXR1czogJycsCiAgICAgICAgc2VuZGVyTmFtZTogJycsCiAgICAgICAgc2VuZGVyRGF0ZTogJycsCiAgICAgICAgY3JlYXRvcjogJycsCiAgICAgICAgY3JlYXRlRGF0ZTogJycKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGRhdGFSdWxlICgpIHsKICAgICAgdmFyIHZhbGlkYXRlQ29udGVudCA9IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsKICAgICAgICBpZiAodGhpcy5xdWlsbEVkaXRvci5nZXRMZW5ndGgoKSA8PSAxKSB7CiAgICAgICAgICByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKHRoaXMuJHQoJ3ZhbGlkYXRlLnJlcXVpcmVkJykpKQogICAgICAgIH0KICAgICAgICBjYWxsYmFjaygpCiAgICAgIH0KICAgICAgcmV0dXJuIHsKICAgICAgICB0eXBlOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiB0aGlzLiR0KCd2YWxpZGF0ZS5yZXF1aXJlZCcpLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0sCiAgICAgICAgdGl0bGU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6IHRoaXMuJHQoJ3ZhbGlkYXRlLnJlcXVpcmVkJyksIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICBjb250ZW50OiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiB0aGlzLiR0KCd2YWxpZGF0ZS5yZXF1aXJlZCcpLCB0cmlnZ2VyOiAnYmx1cicgfSwKICAgICAgICAgIHsgdmFsaWRhdG9yOiB2YWxpZGF0ZUNvbnRlbnQsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICByZWNlaXZlclR5cGU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6IHRoaXMuJHQoJ3ZhbGlkYXRlLnJlcXVpcmVkJyksIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICByZWNlaXZlclR5cGVJZHM6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6IHRoaXMuJHQoJ3ZhbGlkYXRlLnJlcXVpcmVkJyksIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICBzdGF0dXM6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6IHRoaXMuJHQoJ3ZhbGlkYXRlLnJlcXVpcmVkJyksIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICBzZW5kZXJOYW1lOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiB0aGlzLiR0KCd2YWxpZGF0ZS5yZXF1aXJlZCcpLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0KICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdCAoKSB7CiAgICAgIHRoaXMudmlzaWJsZSA9IHRydWUKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIGlmICh0aGlzLnF1aWxsRWRpdG9yKSB7CiAgICAgICAgICB0aGlzLnF1aWxsRWRpdG9yLmRlbGV0ZVRleHQoMCwgdGhpcy5xdWlsbEVkaXRvci5nZXRMZW5ndGgoKSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5xdWlsbEVkaXRvckhhbmRsZSgpCiAgICAgICAgfQogICAgICAgIHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10ucmVzZXRGaWVsZHMoKQogICAgICAgIFByb21pc2UuYWxsKFsKICAgICAgICAgIHRoaXMuZ2V0RGVwdExpc3QoKQogICAgICAgIF0pLnRoZW4oKCkgPT4gewogICAgICAgICAgaWYgKHRoaXMuZGF0YUZvcm0uaWQpIHsKICAgICAgICAgICAgdGhpcy5nZXRJbmZvKCkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9KQogICAgfSwKICAgIC8vIOWvjOaWh+acrOe8lui+keWZqAogICAgcXVpbGxFZGl0b3JIYW5kbGUgKCkgewogICAgICB0aGlzLnF1aWxsRWRpdG9yID0gbmV3IFF1aWxsKCcjSl9xdWlsbEVkaXRvcicsIHsKICAgICAgICBtb2R1bGVzOiB7CiAgICAgICAgICB0b29sYmFyOiB0aGlzLnF1aWxsRWRpdG9yVG9vbGJhck9wdGlvbnMKICAgICAgICB9LAogICAgICAgIHRoZW1lOiAnc25vdycKICAgICAgfSkKICAgICAgLy8g6Ieq5a6a5LmJ5LiK5Lyg5Zu+54mH5Yqf6IO9ICjkvb/nlKhlbGVtZW50IHVwbG9hZOe7hOS7tikKICAgICAgdGhpcy51cGxvYWRVcmwgPSBgJHt3aW5kb3cuU0lURV9DT05GSUdbJ2FwaVVSTCddfS9zeXMvb3NzL3VwbG9hZD90b2tlbj0ke0Nvb2tpZXMuZ2V0KCd0b2tlbicpfWAKICAgICAgdGhpcy5xdWlsbEVkaXRvci5nZXRNb2R1bGUoJ3Rvb2xiYXInKS5hZGRIYW5kbGVyKCdpbWFnZScsICgpID0+IHsKICAgICAgICB0aGlzLiRyZWZzLnVwbG9hZEJ0bi4kZWwuY2xpY2soKQogICAgICB9KQogICAgICAvLyDnm5HlkKzlhoXlrrnlj5jljJbvvIzliqjmgIHotYvlgLwKICAgICAgdGhpcy5xdWlsbEVkaXRvci5vbigndGV4dC1jaGFuZ2UnLCAoKSA9PiB7CiAgICAgICAgdGhpcy5kYXRhRm9ybS5jb250ZW50ID0gdGhpcy5xdWlsbEVkaXRvci5yb290LmlubmVySFRNTAogICAgICB9KQogICAgfSwKICAgIC8vIOS4iuS8oOWbvueJh+S5i+WJjQogICAgdXBsb2FkQmVmb3JlVXBsb2FkSGFuZGxlIChmaWxlKSB7CiAgICAgIGlmIChmaWxlLnR5cGUgIT09ICdpbWFnZS9qcGcnICYmIGZpbGUudHlwZSAhPT0gJ2ltYWdlL2pwZWcnICYmIGZpbGUudHlwZSAhPT0gJ2ltYWdlL3BuZycgJiYgZmlsZS50eXBlICE9PSAnaW1hZ2UvZ2lmJykgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IodGhpcy4kdCgndXBsb2FkLnRpcCcsIHsgJ2Zvcm1hdCc6ICdqcGfjgIFwbmfjgIFnaWYnIH0pKQogICAgICAgIHJldHVybiBmYWxzZQogICAgICB9CiAgICB9LAogICAgLy8g5LiK5Lyg5Zu+54mH5oiQ5YqfCiAgICB1cGxvYWRTdWNjZXNzSGFuZGxlIChyZXMsIGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIGlmIChyZXMuY29kZSAhPT0gMCkgewogICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpCiAgICAgIH0KICAgICAgdGhpcy5xdWlsbEVkaXRvci5pbnNlcnRFbWJlZCh0aGlzLnF1aWxsRWRpdG9yLmdldFNlbGVjdGlvbigpLmluZGV4LCAnaW1hZ2UnLCByZXMuZGF0YS5zcmMpCiAgICB9LAogICAgLy8g6I635Y+W6YOo6Zeo5YiX6KGoCiAgICBnZXREZXB0TGlzdCAoKSB7CiAgICAgIHJldHVybiB0aGlzLiRodHRwLmdldCgnL3N5cy9kZXB0L2xpc3QnKS50aGVuKCh7IGRhdGE6IHJlcyB9KSA9PiB7CiAgICAgICAgaWYgKHJlcy5jb2RlICE9PSAwKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKQogICAgICAgIH0KICAgICAgICB0aGlzLmRlcHRMaXN0ID0gcmVzLmRhdGEKICAgICAgfSkuY2F0Y2goKCkgPT4ge30pCiAgICB9LAogICAgLy8g6I635Y+W5L+h5oGvCiAgICBnZXRJbmZvICgpIHsKICAgICAgdGhpcy4kaHR0cC5nZXQoYC9zeXMvbm90aWNlLyR7dGhpcy5kYXRhRm9ybS5pZH1gKS50aGVuKCh7IGRhdGE6IHJlcyB9KSA9PiB7CiAgICAgICAgaWYgKHJlcy5jb2RlICE9PSAwKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKQogICAgICAgIH0KICAgICAgICB0aGlzLmRhdGFGb3JtID0gewogICAgICAgICAgLi4udGhpcy5kYXRhRm9ybSwKICAgICAgICAgIC4uLnJlcy5kYXRhCiAgICAgICAgfQoKICAgICAgICB0aGlzLnF1aWxsRWRpdG9yLnJvb3QuaW5uZXJIVE1MID0gdGhpcy5kYXRhRm9ybS5jb250ZW50CgogICAgICAgIC8vIOaOpeWPl+iAheS4uumDqOmXqAogICAgICAgIGlmICh0aGlzLmRhdGFGb3JtLnJlY2VpdmVyVHlwZSA9PT0gMSkgewogICAgICAgICAgdGhpcy4kcmVmcy5kZXB0TGlzdFRyZWUuc2V0Q2hlY2tlZEtleXMocmVzLmRhdGEucmVjZWl2ZXJUeXBlSWRzLnNwbGl0KCcsJykpCiAgICAgICAgfQogICAgICB9KS5jYXRjaCgoKSA9PiB7fSkKICAgIH0sCiAgICAvLyDooajljZXmj5DkuqQKICAgIGRhdGFGb3JtU3VibWl0SGFuZGxlOiBkZWJvdW5jZShmdW5jdGlvbiAoc3RhdHVzKSB7CiAgICAgIHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10udmFsaWRhdGUoKHZhbGlkKSA9PiB7CiAgICAgICAgaWYgKCF2YWxpZCkgewogICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgfQogICAgICAgIC8vIOaOpeWPl+iAheS4uumDqOmXqAogICAgICAgIGlmICh0aGlzLmRhdGFGb3JtLnJlY2VpdmVyVHlwZSA9PT0gMSkgewogICAgICAgICAgdGhpcy5kYXRhRm9ybS5yZWNlaXZlclR5cGVJZHMgPSB0aGlzLiRyZWZzLmRlcHRMaXN0VHJlZS5nZXRDaGVja2VkS2V5cygpLmpvaW4oJywnKQogICAgICAgICAgdGhpcy5kYXRhRm9ybS5yZWNlaXZlclR5cGVMaXN0ID0gdGhpcy4kcmVmcy5kZXB0TGlzdFRyZWUuZ2V0Q2hlY2tlZEtleXMoKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmRhdGFGb3JtLnJlY2VpdmVyVHlwZUlkcyA9ICcnCiAgICAgICAgfQogICAgICAgIHRoaXMuZGF0YUZvcm0uc3RhdHVzID0gc3RhdHVzCiAgICAgICAgdGhpcy4kaHR0cFshdGhpcy5kYXRhRm9ybS5pZCA/ICdwb3N0JyA6ICdwdXQnXSgnL3N5cy9ub3RpY2UvJywgdGhpcy5kYXRhRm9ybSkudGhlbigoeyBkYXRhOiByZXMgfSkgPT4gewogICAgICAgICAgaWYgKHJlcy5jb2RlICE9PSAwKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpCiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgncHJvbXB0LnN1Y2Nlc3MnKSwKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICBkdXJhdGlvbjogNTAwLAogICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiB7CiAgICAgICAgICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdyZWZyZXNoRGF0YUxpc3QnKQogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgIH0pLmNhdGNoKCgpID0+IHt9KQogICAgICB9KQogICAgfSwgMTAwMCwgeyAnbGVhZGluZyc6IHRydWUsICd0cmFpbGluZyc6IGZhbHNlIH0pCiAgfQp9Cg=="},{"version":3,"sources":["notice-add-or-update.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"notice-add-or-update.vue","sourceRoot":"src/views/modules/notice","sourcesContent":["<template>\n  <el-dialog :visible.sync=\"visible\" :title=\"!dataForm.id ? $t('add') : $t('update')\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" :label-width=\"$i18n.locale === 'en-US' ? '120px' : '80px'\">\n      <el-form-item :label=\"$t('notice.type')\" prop=\"type\">\n          <ren-radio-group v-model=\"dataForm.type\" dict-type=\"notice_type\"></ren-radio-group>\n      </el-form-item>\n      <el-form-item :label=\"$t('notice.title')\"  prop=\"title\">\n          <el-input v-model=\"dataForm.title\" :placeholder=\"$t('notice.title')\"></el-input>\n      </el-form-item>\n      <el-form-item prop=\"content\" :label=\"$t('notice.content')\">\n        <!-- 富文本编辑器, 容器 -->\n        <div id=\"J_quillEditor\" style=\"height:280px\"></div>\n        <!-- 自定义上传图片功能 (使用element upload组件) -->\n        <el-upload\n                :action=\"uploadUrl\"\n                :show-file-list=\"false\"\n                :before-upload=\"uploadBeforeUploadHandle\"\n                :on-success=\"uploadSuccessHandle\"\n                style=\"display: none;\">\n            <el-button ref=\"uploadBtn\" type=\"primary\" size=\"small\">{{ $t('upload.button') }}</el-button>\n        </el-upload>\n      </el-form-item>\n      <el-form-item :label=\"$t('notice.receiverType')\" prop=\"\">\n          <el-radio-group v-model=\"dataForm.receiverType\">\n              <el-radio :label=\"0\">{{ $t('notice.receiverType0') }}</el-radio>\n              <el-radio :label=\"1\">{{ $t('notice.receiverType1') }}</el-radio>\n          </el-radio-group>\n      </el-form-item>\n      <el-form-item v-show=\"dataForm.receiverType == 1\" size=\"mini\" :label=\"$t('notice.selectDept')\">\n        <el-tree\n            :data=\"deptList\"\n            :props=\"{ label: 'name', children: 'children' }\"\n            node-key=\"id\"\n            ref=\"deptListTree\"\n            accordion\n            show-checkbox>\n        </el-tree>\n      </el-form-item>\n    </el-form>\n    <template slot=\"footer\">\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\n      <el-button type=\"danger\" @click=\"dataFormSubmitHandle(0)\">{{ $t('notice.draft') }}</el-button>\n      <el-button type=\"primary\" @click=\"dataFormSubmitHandle(1)\">{{ $t('notice.release') }}</el-button>\n    </template>\n  </el-dialog>\n</template>\n\n<script>\nimport Cookies from 'js-cookie'\nimport debounce from 'lodash/debounce'\nimport 'quill/dist/quill.snow.css'\nimport Quill from 'quill'\nexport default {\n  data () {\n    return {\n      visible: false,\n      quillEditor: null,\n      quillEditorToolbarOptions: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['image'],\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n        [{ 'size': ['small', false, 'large', 'huge'] }],\n        [{ 'color': [] }, { 'background': [] }],\n        ['clean']\n      ],\n      uploadUrl: '',\n      deptList: [],\n      dataForm: {\n        id: '',\n        type: 0,\n        title: '',\n        content: '',\n        receiverType: 0,\n        receiverTypeIds: '',\n        receiverTypeList: [],\n        status: '',\n        senderName: '',\n        senderDate: '',\n        creator: '',\n        createDate: ''\n      }\n    }\n  },\n  computed: {\n    dataRule () {\n      var validateContent = (rule, value, callback) => {\n        if (this.quillEditor.getLength() <= 1) {\n          return callback(new Error(this.$t('validate.required')))\n        }\n        callback()\n      }\n      return {\n        type: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ],\n        title: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ],\n        content: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' },\n          { validator: validateContent, trigger: 'blur' }\n        ],\n        receiverType: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ],\n        receiverTypeIds: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ],\n        status: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ],\n        senderName: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    init () {\n      this.visible = true\n      this.$nextTick(() => {\n        if (this.quillEditor) {\n          this.quillEditor.deleteText(0, this.quillEditor.getLength())\n        } else {\n          this.quillEditorHandle()\n        }\n        this.$refs['dataForm'].resetFields()\n        Promise.all([\n          this.getDeptList()\n        ]).then(() => {\n          if (this.dataForm.id) {\n            this.getInfo()\n          }\n        })\n      })\n    },\n    // 富文本编辑器\n    quillEditorHandle () {\n      this.quillEditor = new Quill('#J_quillEditor', {\n        modules: {\n          toolbar: this.quillEditorToolbarOptions\n        },\n        theme: 'snow'\n      })\n      // 自定义上传图片功能 (使用element upload组件)\n      this.uploadUrl = `${window.SITE_CONFIG['apiURL']}/sys/oss/upload?token=${Cookies.get('token')}`\n      this.quillEditor.getModule('toolbar').addHandler('image', () => {\n        this.$refs.uploadBtn.$el.click()\n      })\n      // 监听内容变化，动态赋值\n      this.quillEditor.on('text-change', () => {\n        this.dataForm.content = this.quillEditor.root.innerHTML\n      })\n    },\n    // 上传图片之前\n    uploadBeforeUploadHandle (file) {\n      if (file.type !== 'image/jpg' && file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/gif') {\n        this.$message.error(this.$t('upload.tip', { 'format': 'jpg、png、gif' }))\n        return false\n      }\n    },\n    // 上传图片成功\n    uploadSuccessHandle (res, file, fileList) {\n      if (res.code !== 0) {\n        return this.$message.error(res.msg)\n      }\n      this.quillEditor.insertEmbed(this.quillEditor.getSelection().index, 'image', res.data.src)\n    },\n    // 获取部门列表\n    getDeptList () {\n      return this.$http.get('/sys/dept/list').then(({ data: res }) => {\n        if (res.code !== 0) {\n          return this.$message.error(res.msg)\n        }\n        this.deptList = res.data\n      }).catch(() => {})\n    },\n    // 获取信息\n    getInfo () {\n      this.$http.get(`/sys/notice/${this.dataForm.id}`).then(({ data: res }) => {\n        if (res.code !== 0) {\n          return this.$message.error(res.msg)\n        }\n        this.dataForm = {\n          ...this.dataForm,\n          ...res.data\n        }\n\n        this.quillEditor.root.innerHTML = this.dataForm.content\n\n        // 接受者为部门\n        if (this.dataForm.receiverType === 1) {\n          this.$refs.deptListTree.setCheckedKeys(res.data.receiverTypeIds.split(','))\n        }\n      }).catch(() => {})\n    },\n    // 表单提交\n    dataFormSubmitHandle: debounce(function (status) {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) {\n          return false\n        }\n        // 接受者为部门\n        if (this.dataForm.receiverType === 1) {\n          this.dataForm.receiverTypeIds = this.$refs.deptListTree.getCheckedKeys().join(',')\n          this.dataForm.receiverTypeList = this.$refs.deptListTree.getCheckedKeys()\n        } else {\n          this.dataForm.receiverTypeIds = ''\n        }\n        this.dataForm.status = status\n        this.$http[!this.dataForm.id ? 'post' : 'put']('/sys/notice/', this.dataForm).then(({ data: res }) => {\n          if (res.code !== 0) {\n            return this.$message.error(res.msg)\n          }\n          this.$message({\n            message: this.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: () => {\n              this.visible = false\n              this.$emit('refreshDataList')\n            }\n          })\n        }).catch(() => {})\n      })\n    }, 1000, { 'leading': true, 'trailing': false })\n  }\n}\n</script>\n"]}]}