{"remainingRequest":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\src\\components\\ren-region-tree\\src\\ren-region-tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\src\\components\\ren-region-tree\\src\\ren-region-tree.vue","mtime":1595727761856},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639029294232},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1639029293447},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639029294232},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1639029303663}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHRyZWVEYXRhVHJhbnNsYXRlIH0gZnJvbSAnQC91dGlscycKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdSZW5SZWdpb25UcmVlJywKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbHRlclRleHQ6ICcnLAogICAgICB2aXNpYmxlVHJlZTogZmFsc2UsCiAgICAgIGRhdGFMaXN0OiBbXSwKICAgICAgc2hvd05hbWU6ICcnLAogICAgICBleHBhbmRlZEtleXM6IG51bGwsCiAgICAgIGRlZmF1bHRQcm9wczogewogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLAogICAgICAgIGxhYmVsOiAnbmFtZScKICAgICAgfQogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIHZhbHVlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgcGFyZW50TmFtZTogU3RyaW5nLAogICAgcGxhY2Vob2xkZXI6IFN0cmluZwogIH0sCiAgd2F0Y2g6IHsKICAgIGZpbHRlclRleHQgKHZhbCkgewogICAgICB0aGlzLiRyZWZzLnRyZWUuZmlsdGVyKHZhbCkKICAgIH0sCiAgICBwYXJlbnROYW1lICh2YWwpIHsKICAgICAgdGhpcy5zaG93TmFtZSA9IHZhbAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdHJlZURpYWxvZyAoKSB7CiAgICAgIHRoaXMuZXhwYW5kZWRLZXlzID0gbnVsbAogICAgICBpZiAodGhpcy4kcmVmcy50cmVlKSB7CiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldEN1cnJlbnRLZXkobnVsbCkKICAgICAgfQogICAgICB0aGlzLnZpc2libGVUcmVlID0gdHJ1ZQogICAgICB0aGlzLmdldERhdGFMaXN0KHRoaXMudmFsdWUpCiAgICB9LAogICAgZmlsdGVyTm9kZSAodmFsdWUsIGRhdGEpIHsKICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHRydWUKICAgICAgcmV0dXJuIGRhdGEubmFtZS5pbmRleE9mKHZhbHVlKSAhPT0gLTEKICAgIH0sCiAgICBnZXREYXRhTGlzdCAoaWQpIHsKICAgICAgcmV0dXJuIHRoaXMuJGh0dHAuZ2V0KCcvc3lzL3JlZ2lvbi90cmVlJykudGhlbigoeyBkYXRhOiByZXMgfSkgPT4gewogICAgICAgIGlmIChyZXMuY29kZSAhPT0gMCkgewogICAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZykKICAgICAgICB9CiAgICAgICAgdGhpcy5kYXRhTGlzdCA9IHRyZWVEYXRhVHJhbnNsYXRlKHJlcy5kYXRhKQogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIHRoaXMuJHJlZnMudHJlZS5zZXRDdXJyZW50S2V5KGlkKQogICAgICAgICAgdGhpcy5leHBhbmRlZEtleXMgPSBbaWRdCiAgICAgICAgfSkKICAgICAgfSkuY2F0Y2goKCkgPT4ge30pCiAgICB9LAogICAgY2FuY2VsSGFuZGxlICgpIHsKICAgICAgdGhpcy52aXNpYmxlVHJlZSA9IGZhbHNlCiAgICAgIHRoaXMuZGF0YUxpc3QgPSBbXQogICAgICB0aGlzLmZpbHRlclRleHQgPSAnJwogICAgfSwKICAgIGNsZWFySGFuZGxlICgpIHsKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCAnMCcpCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpwYXJlbnROYW1lJywgJycpCiAgICAgIHRoaXMuc2hvd05hbWUgPSAnJwogICAgICB0aGlzLnZpc2libGVUcmVlID0gZmFsc2UKICAgICAgdGhpcy5kYXRhTGlzdCA9IFtdCiAgICAgIHRoaXMuZmlsdGVyVGV4dCA9ICcnCiAgICB9LAogICAgY29tbWl0SGFuZGxlICgpIHsKICAgICAgY29uc3Qgbm9kZSA9IHRoaXMuJHJlZnMudHJlZS5nZXRDdXJyZW50Tm9kZSgpCiAgICAgIGlmICghbm9kZSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IodGhpcy4kdCgnY2hvb3NlJykpCiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBub2RlLmlkKQogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6cGFyZW50TmFtZScsIG5vZGUubmFtZSkKICAgICAgdGhpcy5zaG93TmFtZSA9IG5vZGUubmFtZQogICAgICB0aGlzLnZpc2libGVUcmVlID0gZmFsc2UKICAgICAgdGhpcy5kYXRhTGlzdCA9IFtdCiAgICAgIHRoaXMuZmlsdGVyVGV4dCA9ICcnCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ren-region-tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ren-region-tree.vue","sourceRoot":"src/components/ren-region-tree/src","sourcesContent":["<template>\n  <div class=\"ren-region\">\n  <el-input v-model=\"showName\" :placeholder=\"placeholder\" @focus=\"treeDialog\">\n    <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"treeDialog\"></el-button>\n  </el-input>\n  <el-input :value=\"value\" style=\"display: none\"></el-input>\n  <el-dialog :visible.sync=\"visibleTree\" width=\"360px\" :modal=\"false\" :title=\"placeholder\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\n    <el-form size=\"mini\" :inline=\"true\">\n      <el-form-item :label=\"$t('keyword')\">\n        <el-input v-model=\"filterText\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"default\">{{ $t('query') }}</el-button>\n      </el-form-item>\n    </el-form>\n    <el-tree\n      class=\"filter-tree\"\n      :data=\"dataList\"\n      :default-expanded-keys=\"expandedKeys\"\n      :props=\"{ label: 'name', children: 'children' }\"\n      :expand-on-click-node=\"false\"\n      :filter-node-method=\"filterNode\"\n      :highlight-current=\"true\"\n      node-key=\"id\"\n      ref=\"tree\">\n    </el-tree>\n    <template slot=\"footer\">\n      <el-button type=\"default\" @click=\"cancelHandle()\" size=\"mini\">{{ $t('cancel') }}</el-button>\n      <el-button type=\"info\" @click=\"clearHandle()\" size=\"mini\">{{ $t('clear') }}</el-button>\n      <el-button type=\"primary\" @click=\"commitHandle()\" size=\"mini\">{{ $t('confirm') }}</el-button>\n    </template>\n  </el-dialog>\n  </div>\n</template>\n<style lang=\"scss\">\n.ren-region {\n    .filter-tree {\n        max-height: 230px;\n        overflow: auto;\n    }\n    .el-dialog__body {\n        padding: 0px 0px 0px 20px;\n    }\n    .el-dialog__footer {\n        padding: 10px 20px 8px 20px;\n    }\n}\n</style>\n<script>\nimport { treeDataTranslate } from '@/utils'\nexport default {\n  name: 'RenRegionTree',\n  data () {\n    return {\n      filterText: '',\n      visibleTree: false,\n      dataList: [],\n      showName: '',\n      expandedKeys: null,\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    }\n  },\n  props: {\n    value: [Number, String],\n    parentName: String,\n    placeholder: String\n  },\n  watch: {\n    filterText (val) {\n      this.$refs.tree.filter(val)\n    },\n    parentName (val) {\n      this.showName = val\n    }\n  },\n  methods: {\n    treeDialog () {\n      this.expandedKeys = null\n      if (this.$refs.tree) {\n        this.$refs.tree.setCurrentKey(null)\n      }\n      this.visibleTree = true\n      this.getDataList(this.value)\n    },\n    filterNode (value, data) {\n      if (!value) return true\n      return data.name.indexOf(value) !== -1\n    },\n    getDataList (id) {\n      return this.$http.get('/sys/region/tree').then(({ data: res }) => {\n        if (res.code !== 0) {\n          return this.$message.error(res.msg)\n        }\n        this.dataList = treeDataTranslate(res.data)\n        this.$nextTick(() => {\n          this.$refs.tree.setCurrentKey(id)\n          this.expandedKeys = [id]\n        })\n      }).catch(() => {})\n    },\n    cancelHandle () {\n      this.visibleTree = false\n      this.dataList = []\n      this.filterText = ''\n    },\n    clearHandle () {\n      this.$emit('input', '0')\n      this.$emit('update:parentName', '')\n      this.showName = ''\n      this.visibleTree = false\n      this.dataList = []\n      this.filterText = ''\n    },\n    commitHandle () {\n      const node = this.$refs.tree.getCurrentNode()\n      if (!node) {\n        this.$message.error(this.$t('choose'))\n        return\n      }\n      this.$emit('input', node.id)\n      this.$emit('update:parentName', node.name)\n      this.showName = node.name\n      this.visibleTree = false\n      this.dataList = []\n      this.filterText = ''\n    }\n  }\n}\n</script>\n"]}]}