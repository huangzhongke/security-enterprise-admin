{"remainingRequest":"E:\\frontCode\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\frontCode\\security-enterprise-admin\\src\\views\\modules\\notice\\notice-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\frontCode\\security-enterprise-admin\\src\\views\\modules\\notice\\notice-add-or-update.vue","mtime":1657251814346},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657251795729},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1657251794312},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657251795729},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1657251812566}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQ29va2llcyBmcm9tICdqcy1jb29raWUnDQppbXBvcnQgZGVib3VuY2UgZnJvbSAnbG9kYXNoL2RlYm91bmNlJw0KaW1wb3J0ICdxdWlsbC9kaXN0L3F1aWxsLnNub3cuY3NzJw0KaW1wb3J0IFF1aWxsIGZyb20gJ3F1aWxsJw0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdmlzaWJsZTogZmFsc2UsDQogICAgICBxdWlsbEVkaXRvcjogbnVsbCwNCiAgICAgIHF1aWxsRWRpdG9yVG9vbGJhck9wdGlvbnM6IFsNCiAgICAgICAgWydib2xkJywgJ2l0YWxpYycsICd1bmRlcmxpbmUnLCAnc3RyaWtlJ10sDQogICAgICAgIFsnaW1hZ2UnXSwNCiAgICAgICAgW3sgJ2xpc3QnOiAnb3JkZXJlZCcgfSwgeyAnbGlzdCc6ICdidWxsZXQnIH1dLA0KICAgICAgICBbeyAnc2l6ZSc6IFsnc21hbGwnLCBmYWxzZSwgJ2xhcmdlJywgJ2h1Z2UnXSB9XSwNCiAgICAgICAgW3sgJ2NvbG9yJzogW10gfSwgeyAnYmFja2dyb3VuZCc6IFtdIH1dLA0KICAgICAgICBbJ2NsZWFuJ10NCiAgICAgIF0sDQogICAgICB1cGxvYWRVcmw6ICcnLA0KICAgICAgZGVwdExpc3Q6IFtdLA0KICAgICAgZGF0YUZvcm06IHsNCiAgICAgICAgaWQ6ICcnLA0KICAgICAgICB0eXBlOiAwLA0KICAgICAgICB0aXRsZTogJycsDQogICAgICAgIGNvbnRlbnQ6ICcnLA0KICAgICAgICByZWNlaXZlclR5cGU6IDAsDQogICAgICAgIHJlY2VpdmVyVHlwZUlkczogJycsDQogICAgICAgIHJlY2VpdmVyVHlwZUxpc3Q6IFtdLA0KICAgICAgICBzdGF0dXM6ICcnLA0KICAgICAgICBzZW5kZXJOYW1lOiAnJywNCiAgICAgICAgc2VuZGVyRGF0ZTogJycsDQogICAgICAgIGNyZWF0b3I6ICcnLA0KICAgICAgICBjcmVhdGVEYXRlOiAnJw0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBkYXRhUnVsZSAoKSB7DQogICAgICB2YXIgdmFsaWRhdGVDb250ZW50ID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gew0KICAgICAgICBpZiAodGhpcy5xdWlsbEVkaXRvci5nZXRMZW5ndGgoKSA8PSAxKSB7DQogICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcih0aGlzLiR0KCd2YWxpZGF0ZS5yZXF1aXJlZCcpKSkNCiAgICAgICAgfQ0KICAgICAgICBjYWxsYmFjaygpDQogICAgICB9DQogICAgICByZXR1cm4gew0KICAgICAgICB0eXBlOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogdGhpcy4kdCgndmFsaWRhdGUucmVxdWlyZWQnKSwgdHJpZ2dlcjogJ2JsdXInIH0NCiAgICAgICAgXSwNCiAgICAgICAgdGl0bGU6IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiB0aGlzLiR0KCd2YWxpZGF0ZS5yZXF1aXJlZCcpLCB0cmlnZ2VyOiAnYmx1cicgfQ0KICAgICAgICBdLA0KICAgICAgICBjb250ZW50OiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogdGhpcy4kdCgndmFsaWRhdGUucmVxdWlyZWQnKSwgdHJpZ2dlcjogJ2JsdXInIH0sDQogICAgICAgICAgeyB2YWxpZGF0b3I6IHZhbGlkYXRlQ29udGVudCwgdHJpZ2dlcjogJ2JsdXInIH0NCiAgICAgICAgXSwNCiAgICAgICAgcmVjZWl2ZXJUeXBlOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogdGhpcy4kdCgndmFsaWRhdGUucmVxdWlyZWQnKSwgdHJpZ2dlcjogJ2JsdXInIH0NCiAgICAgICAgXSwNCiAgICAgICAgcmVjZWl2ZXJUeXBlSWRzOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogdGhpcy4kdCgndmFsaWRhdGUucmVxdWlyZWQnKSwgdHJpZ2dlcjogJ2JsdXInIH0NCiAgICAgICAgXSwNCiAgICAgICAgc3RhdHVzOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogdGhpcy4kdCgndmFsaWRhdGUucmVxdWlyZWQnKSwgdHJpZ2dlcjogJ2JsdXInIH0NCiAgICAgICAgXSwNCiAgICAgICAgc2VuZGVyTmFtZTogWw0KICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6IHRoaXMuJHQoJ3ZhbGlkYXRlLnJlcXVpcmVkJyksIHRyaWdnZXI6ICdibHVyJyB9DQogICAgICAgIF0NCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBpbml0ICgpIHsNCiAgICAgIHRoaXMudmlzaWJsZSA9IHRydWUNCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgICAgaWYgKHRoaXMucXVpbGxFZGl0b3IpIHsNCiAgICAgICAgICB0aGlzLnF1aWxsRWRpdG9yLmRlbGV0ZVRleHQoMCwgdGhpcy5xdWlsbEVkaXRvci5nZXRMZW5ndGgoKSkNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLnF1aWxsRWRpdG9ySGFuZGxlKCkNCiAgICAgICAgfQ0KICAgICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnJlc2V0RmllbGRzKCkNCiAgICAgICAgUHJvbWlzZS5hbGwoWw0KICAgICAgICAgIHRoaXMuZ2V0RGVwdExpc3QoKQ0KICAgICAgICBdKS50aGVuKCgpID0+IHsNCiAgICAgICAgICBpZiAodGhpcy5kYXRhRm9ybS5pZCkgew0KICAgICAgICAgICAgdGhpcy5nZXRJbmZvKCkNCiAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgICB9KQ0KICAgIH0sDQogICAgLy8g5a+M5paH5pys57yW6L6R5ZmoDQogICAgcXVpbGxFZGl0b3JIYW5kbGUgKCkgew0KICAgICAgdGhpcy5xdWlsbEVkaXRvciA9IG5ldyBRdWlsbCgnI0pfcXVpbGxFZGl0b3InLCB7DQogICAgICAgIG1vZHVsZXM6IHsNCiAgICAgICAgICB0b29sYmFyOiB0aGlzLnF1aWxsRWRpdG9yVG9vbGJhck9wdGlvbnMNCiAgICAgICAgfSwNCiAgICAgICAgdGhlbWU6ICdzbm93Jw0KICAgICAgfSkNCiAgICAgIC8vIOiHquWumuS5ieS4iuS8oOWbvueJh+WKn+iDvSAo5L2/55SoZWxlbWVudCB1cGxvYWTnu4Tku7YpDQogICAgICB0aGlzLnVwbG9hZFVybCA9IGAke3dpbmRvdy5TSVRFX0NPTkZJR1snYXBpVVJMJ119L3N5cy9vc3MvdXBsb2FkP3Rva2VuPSR7Q29va2llcy5nZXQoJ3Rva2VuJyl9YA0KICAgICAgdGhpcy5xdWlsbEVkaXRvci5nZXRNb2R1bGUoJ3Rvb2xiYXInKS5hZGRIYW5kbGVyKCdpbWFnZScsICgpID0+IHsNCiAgICAgICAgdGhpcy4kcmVmcy51cGxvYWRCdG4uJGVsLmNsaWNrKCkNCiAgICAgIH0pDQogICAgICAvLyDnm5HlkKzlhoXlrrnlj5jljJbvvIzliqjmgIHotYvlgLwNCiAgICAgIHRoaXMucXVpbGxFZGl0b3Iub24oJ3RleHQtY2hhbmdlJywgKCkgPT4gew0KICAgICAgICB0aGlzLmRhdGFGb3JtLmNvbnRlbnQgPSB0aGlzLnF1aWxsRWRpdG9yLnJvb3QuaW5uZXJIVE1MDQogICAgICB9KQ0KICAgIH0sDQogICAgLy8g5LiK5Lyg5Zu+54mH5LmL5YmNDQogICAgdXBsb2FkQmVmb3JlVXBsb2FkSGFuZGxlIChmaWxlKSB7DQogICAgICBpZiAoZmlsZS50eXBlICE9PSAnaW1hZ2UvanBnJyAmJiBmaWxlLnR5cGUgIT09ICdpbWFnZS9qcGVnJyAmJiBmaWxlLnR5cGUgIT09ICdpbWFnZS9wbmcnICYmIGZpbGUudHlwZSAhPT0gJ2ltYWdlL2dpZicpIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcih0aGlzLiR0KCd1cGxvYWQudGlwJywgeyAnZm9ybWF0JzogJ2pwZ+OAgXBuZ+OAgWdpZicgfSkpDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfQ0KICAgIH0sDQogICAgLy8g5LiK5Lyg5Zu+54mH5oiQ5YqfDQogICAgdXBsb2FkU3VjY2Vzc0hhbmRsZSAocmVzLCBmaWxlLCBmaWxlTGlzdCkgew0KICAgICAgaWYgKHJlcy5jb2RlICE9PSAwKSB7DQogICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpDQogICAgICB9DQogICAgICB0aGlzLnF1aWxsRWRpdG9yLmluc2VydEVtYmVkKHRoaXMucXVpbGxFZGl0b3IuZ2V0U2VsZWN0aW9uKCkuaW5kZXgsICdpbWFnZScsIHJlcy5kYXRhLnNyYykNCiAgICB9LA0KICAgIC8vIOiOt+WPlumDqOmXqOWIl+ihqA0KICAgIGdldERlcHRMaXN0ICgpIHsNCiAgICAgIHJldHVybiB0aGlzLiRodHRwLmdldCgnL3N5cy9kZXB0L2xpc3QnKS50aGVuKCh7IGRhdGE6IHJlcyB9KSA9PiB7DQogICAgICAgIGlmIChyZXMuY29kZSAhPT0gMCkgew0KICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpDQogICAgICAgIH0NCiAgICAgICAgdGhpcy5kZXB0TGlzdCA9IHJlcy5kYXRhDQogICAgICB9KS5jYXRjaCgoKSA9PiB7fSkNCiAgICB9LA0KICAgIC8vIOiOt+WPluS/oeaBrw0KICAgIGdldEluZm8gKCkgew0KICAgICAgdGhpcy4kaHR0cC5nZXQoYC9zeXMvbm90aWNlLyR7dGhpcy5kYXRhRm9ybS5pZH1gKS50aGVuKCh7IGRhdGE6IHJlcyB9KSA9PiB7DQogICAgICAgIGlmIChyZXMuY29kZSAhPT0gMCkgew0KICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpDQogICAgICAgIH0NCiAgICAgICAgdGhpcy5kYXRhRm9ybSA9IHsNCiAgICAgICAgICAuLi50aGlzLmRhdGFGb3JtLA0KICAgICAgICAgIC4uLnJlcy5kYXRhDQogICAgICAgIH0NCg0KICAgICAgICB0aGlzLnF1aWxsRWRpdG9yLnJvb3QuaW5uZXJIVE1MID0gdGhpcy5kYXRhRm9ybS5jb250ZW50DQoNCiAgICAgICAgLy8g5o6l5Y+X6ICF5Li66YOo6ZeoDQogICAgICAgIGlmICh0aGlzLmRhdGFGb3JtLnJlY2VpdmVyVHlwZSA9PT0gMSkgew0KICAgICAgICAgIHRoaXMuJHJlZnMuZGVwdExpc3RUcmVlLnNldENoZWNrZWRLZXlzKHJlcy5kYXRhLnJlY2VpdmVyVHlwZUlkcy5zcGxpdCgnLCcpKQ0KICAgICAgICB9DQogICAgICB9KS5jYXRjaCgoKSA9PiB7fSkNCiAgICB9LA0KICAgIC8vIOihqOWNleaPkOS6pA0KICAgIGRhdGFGb3JtU3VibWl0SGFuZGxlOiBkZWJvdW5jZShmdW5jdGlvbiAoc3RhdHVzKSB7DQogICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKCh2YWxpZCkgPT4gew0KICAgICAgICBpZiAoIXZhbGlkKSB7DQogICAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICAgIH0NCiAgICAgICAgLy8g5o6l5Y+X6ICF5Li66YOo6ZeoDQogICAgICAgIGlmICh0aGlzLmRhdGFGb3JtLnJlY2VpdmVyVHlwZSA9PT0gMSkgew0KICAgICAgICAgIHRoaXMuZGF0YUZvcm0ucmVjZWl2ZXJUeXBlSWRzID0gdGhpcy4kcmVmcy5kZXB0TGlzdFRyZWUuZ2V0Q2hlY2tlZEtleXMoKS5qb2luKCcsJykNCiAgICAgICAgICB0aGlzLmRhdGFGb3JtLnJlY2VpdmVyVHlwZUxpc3QgPSB0aGlzLiRyZWZzLmRlcHRMaXN0VHJlZS5nZXRDaGVja2VkS2V5cygpDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy5kYXRhRm9ybS5yZWNlaXZlclR5cGVJZHMgPSAnJw0KICAgICAgICB9DQogICAgICAgIHRoaXMuZGF0YUZvcm0uc3RhdHVzID0gc3RhdHVzDQogICAgICAgIHRoaXMuJGh0dHBbIXRoaXMuZGF0YUZvcm0uaWQgPyAncG9zdCcgOiAncHV0J10oJy9zeXMvbm90aWNlLycsIHRoaXMuZGF0YUZvcm0pLnRoZW4oKHsgZGF0YTogcmVzIH0pID0+IHsNCiAgICAgICAgICBpZiAocmVzLmNvZGUgIT09IDApIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpDQogICAgICAgICAgfQ0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgncHJvbXB0LnN1Y2Nlc3MnKSwNCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywNCiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAsDQogICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiB7DQogICAgICAgICAgICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlDQogICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3JlZnJlc2hEYXRhTGlzdCcpDQogICAgICAgICAgICB9DQogICAgICAgICAgfSkNCiAgICAgICAgfSkuY2F0Y2goKCkgPT4ge30pDQogICAgICB9KQ0KICAgIH0sIDEwMDAsIHsgJ2xlYWRpbmcnOiB0cnVlLCAndHJhaWxpbmcnOiBmYWxzZSB9KQ0KICB9DQp9DQo="},{"version":3,"sources":["notice-add-or-update.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"notice-add-or-update.vue","sourceRoot":"src/views/modules/notice","sourcesContent":["<template>\r\n  <el-dialog :visible.sync=\"visible\" :title=\"!dataForm.id ? $t('add') : $t('update')\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" :label-width=\"$i18n.locale === 'en-US' ? '120px' : '80px'\">\r\n      <el-form-item :label=\"$t('notice.type')\" prop=\"type\">\r\n          <ren-radio-group v-model=\"dataForm.type\" dict-type=\"notice_type\"></ren-radio-group>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('notice.title')\"  prop=\"title\">\r\n          <el-input v-model=\"dataForm.title\" :placeholder=\"$t('notice.title')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"content\" :label=\"$t('notice.content')\">\r\n        <!-- 富文本编辑器, 容器 -->\r\n        <div id=\"J_quillEditor\" style=\"height:280px\"></div>\r\n        <!-- 自定义上传图片功能 (使用element upload组件) -->\r\n        <el-upload\r\n                :action=\"uploadUrl\"\r\n                :show-file-list=\"false\"\r\n                :before-upload=\"uploadBeforeUploadHandle\"\r\n                :on-success=\"uploadSuccessHandle\"\r\n                style=\"display: none;\">\r\n            <el-button ref=\"uploadBtn\" type=\"primary\" size=\"small\">{{ $t('upload.button') }}</el-button>\r\n        </el-upload>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('notice.receiverType')\" prop=\"\">\r\n          <el-radio-group v-model=\"dataForm.receiverType\">\r\n              <el-radio :label=\"0\">{{ $t('notice.receiverType0') }}</el-radio>\r\n              <el-radio :label=\"1\">{{ $t('notice.receiverType1') }}</el-radio>\r\n          </el-radio-group>\r\n      </el-form-item>\r\n      <el-form-item v-show=\"dataForm.receiverType == 1\" size=\"mini\" :label=\"$t('notice.selectDept')\">\r\n        <el-tree\r\n            :data=\"deptList\"\r\n            :props=\"{ label: 'name', children: 'children' }\"\r\n            node-key=\"id\"\r\n            ref=\"deptListTree\"\r\n            accordion\r\n            show-checkbox>\r\n        </el-tree>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template slot=\"footer\">\r\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\r\n      <el-button type=\"danger\" @click=\"dataFormSubmitHandle(0)\">{{ $t('notice.draft') }}</el-button>\r\n      <el-button type=\"primary\" @click=\"dataFormSubmitHandle(1)\">{{ $t('notice.release') }}</el-button>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport Cookies from 'js-cookie'\r\nimport debounce from 'lodash/debounce'\r\nimport 'quill/dist/quill.snow.css'\r\nimport Quill from 'quill'\r\nexport default {\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      quillEditor: null,\r\n      quillEditorToolbarOptions: [\r\n        ['bold', 'italic', 'underline', 'strike'],\r\n        ['image'],\r\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n        [{ 'size': ['small', false, 'large', 'huge'] }],\r\n        [{ 'color': [] }, { 'background': [] }],\r\n        ['clean']\r\n      ],\r\n      uploadUrl: '',\r\n      deptList: [],\r\n      dataForm: {\r\n        id: '',\r\n        type: 0,\r\n        title: '',\r\n        content: '',\r\n        receiverType: 0,\r\n        receiverTypeIds: '',\r\n        receiverTypeList: [],\r\n        status: '',\r\n        senderName: '',\r\n        senderDate: '',\r\n        creator: '',\r\n        createDate: ''\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dataRule () {\r\n      var validateContent = (rule, value, callback) => {\r\n        if (this.quillEditor.getLength() <= 1) {\r\n          return callback(new Error(this.$t('validate.required')))\r\n        }\r\n        callback()\r\n      }\r\n      return {\r\n        type: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        title: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        content: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' },\r\n          { validator: validateContent, trigger: 'blur' }\r\n        ],\r\n        receiverType: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        receiverTypeIds: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        status: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        senderName: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.visible = true\r\n      this.$nextTick(() => {\r\n        if (this.quillEditor) {\r\n          this.quillEditor.deleteText(0, this.quillEditor.getLength())\r\n        } else {\r\n          this.quillEditorHandle()\r\n        }\r\n        this.$refs['dataForm'].resetFields()\r\n        Promise.all([\r\n          this.getDeptList()\r\n        ]).then(() => {\r\n          if (this.dataForm.id) {\r\n            this.getInfo()\r\n          }\r\n        })\r\n      })\r\n    },\r\n    // 富文本编辑器\r\n    quillEditorHandle () {\r\n      this.quillEditor = new Quill('#J_quillEditor', {\r\n        modules: {\r\n          toolbar: this.quillEditorToolbarOptions\r\n        },\r\n        theme: 'snow'\r\n      })\r\n      // 自定义上传图片功能 (使用element upload组件)\r\n      this.uploadUrl = `${window.SITE_CONFIG['apiURL']}/sys/oss/upload?token=${Cookies.get('token')}`\r\n      this.quillEditor.getModule('toolbar').addHandler('image', () => {\r\n        this.$refs.uploadBtn.$el.click()\r\n      })\r\n      // 监听内容变化，动态赋值\r\n      this.quillEditor.on('text-change', () => {\r\n        this.dataForm.content = this.quillEditor.root.innerHTML\r\n      })\r\n    },\r\n    // 上传图片之前\r\n    uploadBeforeUploadHandle (file) {\r\n      if (file.type !== 'image/jpg' && file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/gif') {\r\n        this.$message.error(this.$t('upload.tip', { 'format': 'jpg、png、gif' }))\r\n        return false\r\n      }\r\n    },\r\n    // 上传图片成功\r\n    uploadSuccessHandle (res, file, fileList) {\r\n      if (res.code !== 0) {\r\n        return this.$message.error(res.msg)\r\n      }\r\n      this.quillEditor.insertEmbed(this.quillEditor.getSelection().index, 'image', res.data.src)\r\n    },\r\n    // 获取部门列表\r\n    getDeptList () {\r\n      return this.$http.get('/sys/dept/list').then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        this.deptList = res.data\r\n      }).catch(() => {})\r\n    },\r\n    // 获取信息\r\n    getInfo () {\r\n      this.$http.get(`/sys/notice/${this.dataForm.id}`).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        this.dataForm = {\r\n          ...this.dataForm,\r\n          ...res.data\r\n        }\r\n\r\n        this.quillEditor.root.innerHTML = this.dataForm.content\r\n\r\n        // 接受者为部门\r\n        if (this.dataForm.receiverType === 1) {\r\n          this.$refs.deptListTree.setCheckedKeys(res.data.receiverTypeIds.split(','))\r\n        }\r\n      }).catch(() => {})\r\n    },\r\n    // 表单提交\r\n    dataFormSubmitHandle: debounce(function (status) {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (!valid) {\r\n          return false\r\n        }\r\n        // 接受者为部门\r\n        if (this.dataForm.receiverType === 1) {\r\n          this.dataForm.receiverTypeIds = this.$refs.deptListTree.getCheckedKeys().join(',')\r\n          this.dataForm.receiverTypeList = this.$refs.deptListTree.getCheckedKeys()\r\n        } else {\r\n          this.dataForm.receiverTypeIds = ''\r\n        }\r\n        this.dataForm.status = status\r\n        this.$http[!this.dataForm.id ? 'post' : 'put']('/sys/notice/', this.dataForm).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            return this.$message.error(res.msg)\r\n          }\r\n          this.$message({\r\n            message: this.$t('prompt.success'),\r\n            type: 'success',\r\n            duration: 500,\r\n            onClose: () => {\r\n              this.visible = false\r\n              this.$emit('refreshDataList')\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      })\r\n    }, 1000, { 'leading': true, 'trailing': false })\r\n  }\r\n}\r\n</script>\r\n"]}]}