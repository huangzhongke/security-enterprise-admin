{"remainingRequest":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\src\\views\\modules\\sys\\role-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\src\\views\\modules\\sys\\role-add-or-update.vue","mtime":1595727761922},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2gvZGVib3VuY2UnCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICBtZW51TGlzdDogW10sCiAgICAgIGRlcHRMaXN0OiBbXSwKICAgICAgZGF0YUZvcm06IHsKICAgICAgICBpZDogJycsCiAgICAgICAgbmFtZTogJycsCiAgICAgICAgbWVudUlkTGlzdDogW10sCiAgICAgICAgZGVwdElkTGlzdDogW10sCiAgICAgICAgcmVtYXJrOiAnJwogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgZGF0YVJ1bGUgKCkgewogICAgICByZXR1cm4gewogICAgICAgIG5hbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6IHRoaXMuJHQoJ3ZhbGlkYXRlLnJlcXVpcmVkJyksIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXQogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0ICgpIHsKICAgICAgdGhpcy52aXNpYmxlID0gdHJ1ZQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy4kcmVmc1snZGF0YUZvcm0nXS5yZXNldEZpZWxkcygpCiAgICAgICAgdGhpcy4kcmVmcy5tZW51TGlzdFRyZWUuc2V0Q2hlY2tlZEtleXMoW10pCiAgICAgICAgdGhpcy4kcmVmcy5kZXB0TGlzdFRyZWUuc2V0Q2hlY2tlZEtleXMoW10pCiAgICAgICAgUHJvbWlzZS5hbGwoWwogICAgICAgICAgdGhpcy5nZXRNZW51TGlzdCgpLAogICAgICAgICAgdGhpcy5nZXREZXB0TGlzdCgpCiAgICAgICAgXSkudGhlbigoKSA9PiB7CiAgICAgICAgICBpZiAodGhpcy5kYXRhRm9ybS5pZCkgewogICAgICAgICAgICB0aGlzLmdldEluZm8oKQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIH0pCiAgICB9LAogICAgLy8g6I635Y+W6I+c5Y2V5YiX6KGoCiAgICBnZXRNZW51TGlzdCAoKSB7CiAgICAgIHJldHVybiB0aGlzLiRodHRwLmdldCgnL3N5cy9tZW51L3NlbGVjdCcpLnRoZW4oKHsgZGF0YTogcmVzIH0pID0+IHsKICAgICAgICBpZiAocmVzLmNvZGUgIT09IDApIHsKICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpCiAgICAgICAgfQogICAgICAgIHRoaXMubWVudUxpc3QgPSByZXMuZGF0YQogICAgICB9KS5jYXRjaCgoKSA9PiB7fSkKICAgIH0sCiAgICAvLyDojrflj5bpg6jpl6jliJfooagKICAgIGdldERlcHRMaXN0ICgpIHsKICAgICAgcmV0dXJuIHRoaXMuJGh0dHAuZ2V0KCcvc3lzL2RlcHQvbGlzdCcpLnRoZW4oKHsgZGF0YTogcmVzIH0pID0+IHsKICAgICAgICBpZiAocmVzLmNvZGUgIT09IDApIHsKICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpCiAgICAgICAgfQogICAgICAgIHRoaXMuZGVwdExpc3QgPSByZXMuZGF0YQogICAgICB9KS5jYXRjaCgoKSA9PiB7fSkKICAgIH0sCiAgICAvLyDojrflj5bkv6Hmga8KICAgIGdldEluZm8gKCkgewogICAgICB0aGlzLiRodHRwLmdldChgL3N5cy9yb2xlLyR7dGhpcy5kYXRhRm9ybS5pZH1gKS50aGVuKCh7IGRhdGE6IHJlcyB9KSA9PiB7CiAgICAgICAgaWYgKHJlcy5jb2RlICE9PSAwKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKQogICAgICAgIH0KICAgICAgICB0aGlzLmRhdGFGb3JtID0gewogICAgICAgICAgLi4udGhpcy5kYXRhRm9ybSwKICAgICAgICAgIC4uLnJlcy5kYXRhCiAgICAgICAgfQogICAgICAgIHRoaXMuZGF0YUZvcm0ubWVudUlkTGlzdC5mb3JFYWNoKGl0ZW0gPT4gdGhpcy4kcmVmcy5tZW51TGlzdFRyZWUuc2V0Q2hlY2tlZChpdGVtLCB0cnVlKSkKICAgICAgICB0aGlzLiRyZWZzLmRlcHRMaXN0VHJlZS5zZXRDaGVja2VkS2V5cyh0aGlzLmRhdGFGb3JtLmRlcHRJZExpc3QpCiAgICAgIH0pLmNhdGNoKCgpID0+IHt9KQogICAgfSwKICAgIC8vIOihqOWNleaPkOS6pAogICAgZGF0YUZvcm1TdWJtaXRIYW5kbGU6IGRlYm91bmNlKGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy4kcmVmc1snZGF0YUZvcm0nXS52YWxpZGF0ZSgodmFsaWQpID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICB9CiAgICAgICAgdGhpcy5kYXRhRm9ybS5tZW51SWRMaXN0ID0gWwogICAgICAgICAgLi4udGhpcy4kcmVmcy5tZW51TGlzdFRyZWUuZ2V0SGFsZkNoZWNrZWRLZXlzKCksCiAgICAgICAgICAuLi50aGlzLiRyZWZzLm1lbnVMaXN0VHJlZS5nZXRDaGVja2VkS2V5cygpCiAgICAgICAgXQogICAgICAgIHRoaXMuZGF0YUZvcm0uZGVwdElkTGlzdCA9IHRoaXMuJHJlZnMuZGVwdExpc3RUcmVlLmdldENoZWNrZWRLZXlzKCkKICAgICAgICB0aGlzLiRodHRwWyF0aGlzLmRhdGFGb3JtLmlkID8gJ3Bvc3QnIDogJ3B1dCddKCcvc3lzL3JvbGUnLCB0aGlzLmRhdGFGb3JtKS50aGVuKCh7IGRhdGE6IHJlcyB9KSA9PiB7CiAgICAgICAgICBpZiAocmVzLmNvZGUgIT09IDApIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZykKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiB0aGlzLiR0KCdwcm9tcHQuc3VjY2VzcycpLAogICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAsCiAgICAgICAgICAgIG9uQ2xvc2U6ICgpID0+IHsKICAgICAgICAgICAgICB0aGlzLnZpc2libGUgPSBmYWxzZQogICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3JlZnJlc2hEYXRhTGlzdCcpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgfSkuY2F0Y2goKCkgPT4ge30pCiAgICAgIH0pCiAgICB9LCAxMDAwLCB7ICdsZWFkaW5nJzogdHJ1ZSwgJ3RyYWlsaW5nJzogZmFsc2UgfSkKICB9Cn0K"},{"version":3,"sources":["role-add-or-update.vue"],"names":[],"mappingsfile":"role-add-or-update.vue","sourceRoot":"src/views/modules/sys","sourcesContent":["<template>\n  <el-dialog :visible.sync=\"visible\" :title=\"!dataForm.id ? $t('add') : $t('update')\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmitHandle()\" label-width=\"120px\">\n      <el-form-item prop=\"name\" :label=\"$t('role.name')\">\n        <el-input v-model=\"dataForm.name\" :placeholder=\"$t('role.name')\"></el-input>\n      </el-form-item>\n      <el-form-item prop=\"remark\" :label=\"$t('role.remark')\">\n        <el-input v-model=\"dataForm.remark\" :placeholder=\"$t('role.remark')\"></el-input>\n      </el-form-item>\n      <el-row>\n        <el-col :span=\"12\">\n          <el-form-item size=\"mini\" :label=\"$t('role.menuList')\">\n            <el-tree\n              :data=\"menuList\"\n              :props=\"{ label: 'name', children: 'children' }\"\n              node-key=\"id\"\n              ref=\"menuListTree\"\n              accordion\n              show-checkbox>\n            </el-tree>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item size=\"mini\" :label=\"$t('role.deptList')\">\n            <el-tree\n              :data=\"deptList\"\n              :props=\"{ label: 'name', children: 'children' }\"\n              node-key=\"id\"\n              ref=\"deptListTree\"\n              accordion\n              show-checkbox>\n            </el-tree>\n          </el-form-item>\n        </el-col>\n      </el-row>\n    </el-form>\n    <template slot=\"footer\">\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\n      <el-button type=\"primary\" @click=\"dataFormSubmitHandle()\">{{ $t('confirm') }}</el-button>\n    </template>\n  </el-dialog>\n</template>\n\n<script>\nimport debounce from 'lodash/debounce'\nexport default {\n  data () {\n    return {\n      visible: false,\n      menuList: [],\n      deptList: [],\n      dataForm: {\n        id: '',\n        name: '',\n        menuIdList: [],\n        deptIdList: [],\n        remark: ''\n      }\n    }\n  },\n  computed: {\n    dataRule () {\n      return {\n        name: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    init () {\n      this.visible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        this.$refs.menuListTree.setCheckedKeys([])\n        this.$refs.deptListTree.setCheckedKeys([])\n        Promise.all([\n          this.getMenuList(),\n          this.getDeptList()\n        ]).then(() => {\n          if (this.dataForm.id) {\n            this.getInfo()\n          }\n        })\n      })\n    },\n    // 获取菜单列表\n    getMenuList () {\n      return this.$http.get('/sys/menu/select').then(({ data: res }) => {\n        if (res.code !== 0) {\n          return this.$message.error(res.msg)\n        }\n        this.menuList = res.data\n      }).catch(() => {})\n    },\n    // 获取部门列表\n    getDeptList () {\n      return this.$http.get('/sys/dept/list').then(({ data: res }) => {\n        if (res.code !== 0) {\n          return this.$message.error(res.msg)\n        }\n        this.deptList = res.data\n      }).catch(() => {})\n    },\n    // 获取信息\n    getInfo () {\n      this.$http.get(`/sys/role/${this.dataForm.id}`).then(({ data: res }) => {\n        if (res.code !== 0) {\n          return this.$message.error(res.msg)\n        }\n        this.dataForm = {\n          ...this.dataForm,\n          ...res.data\n        }\n        this.dataForm.menuIdList.forEach(item => this.$refs.menuListTree.setChecked(item, true))\n        this.$refs.deptListTree.setCheckedKeys(this.dataForm.deptIdList)\n      }).catch(() => {})\n    },\n    // 表单提交\n    dataFormSubmitHandle: debounce(function () {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) {\n          return false\n        }\n        this.dataForm.menuIdList = [\n          ...this.$refs.menuListTree.getHalfCheckedKeys(),\n          ...this.$refs.menuListTree.getCheckedKeys()\n        ]\n        this.dataForm.deptIdList = this.$refs.deptListTree.getCheckedKeys()\n        this.$http[!this.dataForm.id ? 'post' : 'put']('/sys/role', this.dataForm).then(({ data: res }) => {\n          if (res.code !== 0) {\n            return this.$message.error(res.msg)\n          }\n          this.$message({\n            message: this.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: () => {\n              this.visible = false\n              this.$emit('refreshDataList')\n            }\n          })\n        }).catch(() => {})\n      })\n    }, 1000, { 'leading': true, 'trailing': false })\n  }\n}\n</script>\n"]}]}