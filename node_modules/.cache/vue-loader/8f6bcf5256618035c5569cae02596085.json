{"remainingRequest":"E:\\frontCode\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\frontCode\\security-enterprise-admin\\src\\components\\ren-region-tree\\src\\ren-region-tree.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"E:\\frontCode\\security-enterprise-admin\\src\\components\\ren-region-tree\\src\\ren-region-tree.vue","mtime":1657251814288},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1657251798876},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1657251812567},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1657251806178},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1657251809665},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657251795729},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1657251812566}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnJlbi1yZWdpb24gew0KICAgIC5maWx0ZXItdHJlZSB7DQogICAgICAgIG1heC1oZWlnaHQ6IDIzMHB4Ow0KICAgICAgICBvdmVyZmxvdzogYXV0bzsNCiAgICB9DQogICAgLmVsLWRpYWxvZ19fYm9keSB7DQogICAgICAgIHBhZGRpbmc6IDBweCAwcHggMHB4IDIwcHg7DQogICAgfQ0KICAgIC5lbC1kaWFsb2dfX2Zvb3RlciB7DQogICAgICAgIHBhZGRpbmc6IDEwcHggMjBweCA4cHggMjBweDsNCiAgICB9DQp9DQo="},{"version":3,"sources":["ren-region-tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ren-region-tree.vue","sourceRoot":"src/components/ren-region-tree/src","sourcesContent":["<template>\r\n  <div class=\"ren-region\">\r\n  <el-input v-model=\"showName\" :placeholder=\"placeholder\" @focus=\"treeDialog\">\r\n    <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"treeDialog\"></el-button>\r\n  </el-input>\r\n  <el-input :value=\"value\" style=\"display: none\"></el-input>\r\n  <el-dialog :visible.sync=\"visibleTree\" width=\"360px\" :modal=\"false\" :title=\"placeholder\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\r\n    <el-form size=\"mini\" :inline=\"true\">\r\n      <el-form-item :label=\"$t('keyword')\">\r\n        <el-input v-model=\"filterText\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"default\">{{ $t('query') }}</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <el-tree\r\n      class=\"filter-tree\"\r\n      :data=\"dataList\"\r\n      :default-expanded-keys=\"expandedKeys\"\r\n      :props=\"{ label: 'name', children: 'children' }\"\r\n      :expand-on-click-node=\"false\"\r\n      :filter-node-method=\"filterNode\"\r\n      :highlight-current=\"true\"\r\n      node-key=\"id\"\r\n      ref=\"tree\">\r\n    </el-tree>\r\n    <template slot=\"footer\">\r\n      <el-button type=\"default\" @click=\"cancelHandle()\" size=\"mini\">{{ $t('cancel') }}</el-button>\r\n      <el-button type=\"info\" @click=\"clearHandle()\" size=\"mini\">{{ $t('clear') }}</el-button>\r\n      <el-button type=\"primary\" @click=\"commitHandle()\" size=\"mini\">{{ $t('confirm') }}</el-button>\r\n    </template>\r\n  </el-dialog>\r\n  </div>\r\n</template>\r\n<style lang=\"scss\">\r\n.ren-region {\r\n    .filter-tree {\r\n        max-height: 230px;\r\n        overflow: auto;\r\n    }\r\n    .el-dialog__body {\r\n        padding: 0px 0px 0px 20px;\r\n    }\r\n    .el-dialog__footer {\r\n        padding: 10px 20px 8px 20px;\r\n    }\r\n}\r\n</style>\r\n<script>\r\nimport { treeDataTranslate } from '@/utils'\r\nexport default {\r\n  name: 'RenRegionTree',\r\n  data () {\r\n    return {\r\n      filterText: '',\r\n      visibleTree: false,\r\n      dataList: [],\r\n      showName: '',\r\n      expandedKeys: null,\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      }\r\n    }\r\n  },\r\n  props: {\r\n    value: [Number, String],\r\n    parentName: String,\r\n    placeholder: String\r\n  },\r\n  watch: {\r\n    filterText (val) {\r\n      this.$refs.tree.filter(val)\r\n    },\r\n    parentName (val) {\r\n      this.showName = val\r\n    }\r\n  },\r\n  methods: {\r\n    treeDialog () {\r\n      this.expandedKeys = null\r\n      if (this.$refs.tree) {\r\n        this.$refs.tree.setCurrentKey(null)\r\n      }\r\n      this.visibleTree = true\r\n      this.getDataList(this.value)\r\n    },\r\n    filterNode (value, data) {\r\n      if (!value) return true\r\n      return data.name.indexOf(value) !== -1\r\n    },\r\n    getDataList (id) {\r\n      return this.$http.get('/sys/region/tree').then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        this.dataList = treeDataTranslate(res.data)\r\n        this.$nextTick(() => {\r\n          this.$refs.tree.setCurrentKey(id)\r\n          this.expandedKeys = [id]\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    cancelHandle () {\r\n      this.visibleTree = false\r\n      this.dataList = []\r\n      this.filterText = ''\r\n    },\r\n    clearHandle () {\r\n      this.$emit('input', '0')\r\n      this.$emit('update:parentName', '')\r\n      this.showName = ''\r\n      this.visibleTree = false\r\n      this.dataList = []\r\n      this.filterText = ''\r\n    },\r\n    commitHandle () {\r\n      const node = this.$refs.tree.getCurrentNode()\r\n      if (!node) {\r\n        this.$message.error(this.$t('choose'))\r\n        return\r\n      }\r\n      this.$emit('input', node.id)\r\n      this.$emit('update:parentName', node.name)\r\n      this.showName = node.name\r\n      this.visibleTree = false\r\n      this.dataList = []\r\n      this.filterText = ''\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}