{"remainingRequest":"E:\\frontCode\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\frontCode\\security-enterprise-admin\\src\\views\\modules\\notice\\notice-user.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\frontCode\\security-enterprise-admin\\src\\views\\modules\\notice\\notice-user.vue","mtime":1657251814348},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657251795729},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1657251794312},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657251795729},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1657251812566}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgbWl4aW5WaWV3TW9kdWxlIGZyb20gJ0AvbWl4aW5zL3ZpZXctbW9kdWxlJw0KaW1wb3J0IHsgYWRkRHluYW1pY1JvdXRlIH0gZnJvbSAnQC9yb3V0ZXInDQpleHBvcnQgZGVmYXVsdCB7DQogIG1peGluczogW21peGluVmlld01vZHVsZV0sDQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBtaXhpblZpZXdNb2R1bGVPcHRpb25zOiB7DQogICAgICAgIGdldERhdGFMaXN0VVJMOiAnL3N5cy9ub3RpY2UvbXlub3RpY2UvcGFnZScsDQogICAgICAgIGdldERhdGFMaXN0SXNQYWdlOiB0cnVlDQogICAgICB9LA0KICAgICAgZGF0YUZvcm06IHsNCiAgICAgICAgdHlwZTogJycNCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB2aWV3SGFuZGxlIChyb3cpIHsNCiAgICAgIC8vIOi3r+eUseWPguaVsA0KICAgICAgY29uc3Qgcm91dGVQYXJhbXMgPSB7DQogICAgICAgIHJvdXRlTmFtZTogYCR7dGhpcy4kcm91dGUubmFtZX1fXyR7cm93LmlkfWAsDQogICAgICAgIHRpdGxlOiB0aGlzLiR0KCdub3RpY2UudmlldzInKSwNCiAgICAgICAgcGF0aDogJ25vdGljZS9ub3RpY2UtdXNlci12aWV3JywNCiAgICAgICAgcGFyYW1zOiB7DQogICAgICAgICAgaWQ6IHJvdy5pZA0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIC8vIOWmguaenOacquivu++8jOWImeagh+iusOS4uuW3suivuw0KICAgICAgaWYgKHJvdy5yZWFkU3RhdHVzID09PSAwKSB7DQogICAgICAgIHRoaXMudXBkYXRlUmVhZFN0YXR1cyhyb3cuaWQpDQogICAgICB9DQoNCiAgICAgIC8vIOWKqOaAgei3r+eUsQ0KICAgICAgYWRkRHluYW1pY1JvdXRlKHJvdXRlUGFyYW1zLCB0aGlzLiRyb3V0ZXIpDQogICAgfSwNCiAgICB1cGRhdGVSZWFkU3RhdHVzIChub3RpY2VJZCkgew0KICAgICAgdGhpcy4kaHR0cFsncHV0J10oJy9zeXMvbm90aWNlL215bm90aWNlL3JlYWQvJyArIG5vdGljZUlkKS50aGVuKCh7IGRhdGE6IHJlcyB9KSA9PiB7DQogICAgICAgIGlmIChyZXMuY29kZSAhPT0gMCkgew0KICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpDQogICAgICAgIH0NCiAgICAgIH0pLmNhdGNoKCgpID0+IHt9KQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["notice-user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"notice-user.vue","sourceRoot":"src/views/modules/notice","sourcesContent":["<template>\r\n  <el-card shadow=\"never\" class=\"aui-card--fill\">\r\n    <div class=\"mod-demo__sysnoticeuser\">\r\n      <el-form :inline=\"true\" :model=\"dataForm\" @keyup.enter.native=\"getDataList()\">\r\n        <el-form-item>\r\n          <ren-select v-model=\"dataForm.type\" dict-type=\"notice_type\" :placeholder=\"$t('notice.type')\"></ren-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"getDataList()\">{{ $t('query') }}</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-table v-loading=\"dataListLoading\" :data=\"dataList\" border @selection-change=\"dataListSelectionChangeHandle\" style=\"width: 100%;\">\r\n        <el-table-column type=\"selection\" header-align=\"center\" align=\"center\" width=\"50\"></el-table-column>\r\n        <el-table-column prop=\"title\" :label=\"$t('notice.title')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"type\" :label=\"$t('notice.type')\" header-align=\"center\" align=\"center\" width=\"150\">\r\n            <template slot-scope=\"scope\">\r\n                {{ $getDictLabel(\"notice_type\", scope.row.type) }}\r\n            </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"senderName\" :label=\"$t('notice.senderName')\" header-align=\"center\" align=\"center\" width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"senderDate\" :label=\"$t('notice.senderDate')\" header-align=\"center\" align=\"center\" width=\"170\"></el-table-column>\r\n        <el-table-column prop=\"readStatus\" :label=\"$t('notice.readStatus')\" header-align=\"center\" align=\"center\" width=\"130\">\r\n          <template slot-scope=\"scope\">\r\n              <el-tag v-if=\"scope.row.readStatus === 0\" size=\"small\" type=\"danger\">{{ $t('notice.readStatus0') }}</el-tag>\r\n              <el-tag v-else size=\"small\" type=\"success\">{{ $t('notice.readStatus1') }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column :label=\"$t('handle')\" fixed=\"right\" header-align=\"center\" align=\"center\" width=\"150\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" size=\"small\" @click=\"viewHandle(scope.row)\">{{ $t('notice.view') }}</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n        :current-page=\"page\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size=\"limit\"\r\n        :total=\"total\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"pageSizeChangeHandle\"\r\n        @current-change=\"pageCurrentChangeHandle\">\r\n      </el-pagination>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport mixinViewModule from '@/mixins/view-module'\r\nimport { addDynamicRoute } from '@/router'\r\nexport default {\r\n  mixins: [mixinViewModule],\r\n  data () {\r\n    return {\r\n      mixinViewModuleOptions: {\r\n        getDataListURL: '/sys/notice/mynotice/page',\r\n        getDataListIsPage: true\r\n      },\r\n      dataForm: {\r\n        type: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    viewHandle (row) {\r\n      // 路由参数\r\n      const routeParams = {\r\n        routeName: `${this.$route.name}__${row.id}`,\r\n        title: this.$t('notice.view2'),\r\n        path: 'notice/notice-user-view',\r\n        params: {\r\n          id: row.id\r\n        }\r\n      }\r\n\r\n      // 如果未读，则标记为已读\r\n      if (row.readStatus === 0) {\r\n        this.updateReadStatus(row.id)\r\n      }\r\n\r\n      // 动态路由\r\n      addDynamicRoute(routeParams, this.$router)\r\n    },\r\n    updateReadStatus (noticeId) {\r\n      this.$http['put']('/sys/notice/mynotice/read/' + noticeId).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}