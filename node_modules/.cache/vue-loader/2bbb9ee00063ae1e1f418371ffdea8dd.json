{"remainingRequest":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\src\\views\\modules\\demo\\news-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\src\\views\\modules\\demo\\news-add-or-update.vue","mtime":1595727761908},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb29raWVzIGZyb20gJ2pzLWNvb2tpZScKaW1wb3J0IGRlYm91bmNlIGZyb20gJ2xvZGFzaC9kZWJvdW5jZScKaW1wb3J0ICdxdWlsbC9kaXN0L3F1aWxsLnNub3cuY3NzJwppbXBvcnQgUXVpbGwgZnJvbSAncXVpbGwnCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICBxdWlsbEVkaXRvcjogbnVsbCwKICAgICAgcXVpbGxFZGl0b3JUb29sYmFyT3B0aW9uczogWwogICAgICAgIFsnYm9sZCcsICdpdGFsaWMnLCAndW5kZXJsaW5lJywgJ3N0cmlrZSddLAogICAgICAgIFsnYmxvY2txdW90ZScsICdjb2RlLWJsb2NrJywgJ2ltYWdlJ10sCiAgICAgICAgW3sgJ2hlYWRlcic6IDEgfSwgeyAnaGVhZGVyJzogMiB9XSwKICAgICAgICBbeyAnbGlzdCc6ICdvcmRlcmVkJyB9LCB7ICdsaXN0JzogJ2J1bGxldCcgfV0sCiAgICAgICAgW3sgJ3NjcmlwdCc6ICdzdWInIH0sIHsgJ3NjcmlwdCc6ICdzdXBlcicgfV0sCiAgICAgICAgW3sgJ2luZGVudCc6ICctMScgfSwgeyAnaW5kZW50JzogJysxJyB9XSwKICAgICAgICBbeyAnZGlyZWN0aW9uJzogJ3J0bCcgfV0sCiAgICAgICAgW3sgJ3NpemUnOiBbJ3NtYWxsJywgZmFsc2UsICdsYXJnZScsICdodWdlJ10gfV0sCiAgICAgICAgW3sgJ2hlYWRlcic6IFsxLCAyLCAzLCA0LCA1LCA2LCBmYWxzZV0gfV0sCiAgICAgICAgW3sgJ2NvbG9yJzogW10gfSwgeyAnYmFja2dyb3VuZCc6IFtdIH1dLAogICAgICAgIFt7ICdmb250JzogW10gfV0sCiAgICAgICAgW3sgJ2FsaWduJzogW10gfV0sCiAgICAgICAgWydjbGVhbiddCiAgICAgIF0sCiAgICAgIHVwbG9hZFVybDogJycsCiAgICAgIGRhdGFGb3JtOiB7CiAgICAgICAgaWQ6ICcnLAogICAgICAgIHRpdGxlOiAnJywKICAgICAgICBjb250ZW50OiAnJywKICAgICAgICBwdWJEYXRlOiAnJwogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgZGF0YVJ1bGUgKCkgewogICAgICB2YXIgdmFsaWRhdGVDb250ZW50ID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gewogICAgICAgIGlmICh0aGlzLnF1aWxsRWRpdG9yLmdldExlbmd0aCgpIDw9IDEpIHsKICAgICAgICAgIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IodGhpcy4kdCgndmFsaWRhdGUucmVxdWlyZWQnKSkpCiAgICAgICAgfQogICAgICAgIGNhbGxiYWNrKCkKICAgICAgfQogICAgICByZXR1cm4gewogICAgICAgIHRpdGxlOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiB0aGlzLiR0KCd2YWxpZGF0ZS5yZXF1aXJlZCcpLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0sCiAgICAgICAgY29udGVudDogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogdGhpcy4kdCgndmFsaWRhdGUucmVxdWlyZWQnKSwgdHJpZ2dlcjogJ2JsdXInIH0sCiAgICAgICAgICB7IHZhbGlkYXRvcjogdmFsaWRhdGVDb250ZW50LCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0sCiAgICAgICAgcHViRGF0ZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogdGhpcy4kdCgndmFsaWRhdGUucmVxdWlyZWQnKSwgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdCiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQgKCkgewogICAgICB0aGlzLnZpc2libGUgPSB0cnVlCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICBpZiAodGhpcy5xdWlsbEVkaXRvcikgewogICAgICAgICAgdGhpcy5xdWlsbEVkaXRvci5kZWxldGVUZXh0KDAsIHRoaXMucXVpbGxFZGl0b3IuZ2V0TGVuZ3RoKCkpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMucXVpbGxFZGl0b3JIYW5kbGUoKQogICAgICAgIH0KICAgICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnJlc2V0RmllbGRzKCkKICAgICAgICBpZiAodGhpcy5kYXRhRm9ybS5pZCkgewogICAgICAgICAgdGhpcy5nZXRJbmZvKCkKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgLy8g5a+M5paH5pys57yW6L6R5ZmoCiAgICBxdWlsbEVkaXRvckhhbmRsZSAoKSB7CiAgICAgIHRoaXMucXVpbGxFZGl0b3IgPSBuZXcgUXVpbGwoJyNKX3F1aWxsRWRpdG9yJywgewogICAgICAgIG1vZHVsZXM6IHsKICAgICAgICAgIHRvb2xiYXI6IHRoaXMucXVpbGxFZGl0b3JUb29sYmFyT3B0aW9ucwogICAgICAgIH0sCiAgICAgICAgdGhlbWU6ICdzbm93JwogICAgICB9KQogICAgICAvLyDoh6rlrprkuYnkuIrkvKDlm77niYflip/og70gKOS9v+eUqGVsZW1lbnQgdXBsb2Fk57uE5Lu2KQogICAgICB0aGlzLnVwbG9hZFVybCA9IGAke3dpbmRvdy5TSVRFX0NPTkZJR1snYXBpVVJMJ119L3N5cy9vc3MvdXBsb2FkP3Rva2VuPSR7Q29va2llcy5nZXQoJ3Rva2VuJyl9YAogICAgICB0aGlzLnF1aWxsRWRpdG9yLmdldE1vZHVsZSgndG9vbGJhcicpLmFkZEhhbmRsZXIoJ2ltYWdlJywgKCkgPT4gewogICAgICAgIHRoaXMuJHJlZnMudXBsb2FkQnRuLiRlbC5jbGljaygpCiAgICAgIH0pCiAgICAgIC8vIOebkeWQrOWGheWuueWPmOWMlu+8jOWKqOaAgei1i+WAvAogICAgICB0aGlzLnF1aWxsRWRpdG9yLm9uKCd0ZXh0LWNoYW5nZScsICgpID0+IHsKICAgICAgICB0aGlzLmRhdGFGb3JtLmNvbnRlbnQgPSB0aGlzLnF1aWxsRWRpdG9yLnJvb3QuaW5uZXJIVE1MCiAgICAgIH0pCiAgICB9LAogICAgLy8g5LiK5Lyg5Zu+54mH5LmL5YmNCiAgICB1cGxvYWRCZWZvcmVVcGxvYWRIYW5kbGUgKGZpbGUpIHsKICAgICAgaWYgKGZpbGUudHlwZSAhPT0gJ2ltYWdlL2pwZycgJiYgZmlsZS50eXBlICE9PSAnaW1hZ2UvanBlZycgJiYgZmlsZS50eXBlICE9PSAnaW1hZ2UvcG5nJyAmJiBmaWxlLnR5cGUgIT09ICdpbWFnZS9naWYnKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5Y+q5pSv5oyBanBn44CBcG5n44CBZ2lm5qC85byP55qE5Zu+54mH77yBJykKICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgfQogICAgfSwKICAgIC8vIOS4iuS8oOWbvueJh+aIkOWKnwogICAgdXBsb2FkU3VjY2Vzc0hhbmRsZSAocmVzLCBmaWxlLCBmaWxlTGlzdCkgewogICAgICBpZiAocmVzLmNvZGUgIT09IDApIHsKICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKQogICAgICB9CiAgICAgIHRoaXMucXVpbGxFZGl0b3IuaW5zZXJ0RW1iZWQodGhpcy5xdWlsbEVkaXRvci5nZXRTZWxlY3Rpb24oKS5pbmRleCwgJ2ltYWdlJywgcmVzLmRhdGEuc3JjKQogICAgfSwKICAgIC8vIOiOt+WPluS/oeaBrwogICAgZ2V0SW5mbyAoKSB7CiAgICAgIHRoaXMuJGh0dHAuZ2V0KGAvZGVtby9uZXdzLyR7dGhpcy5kYXRhRm9ybS5pZH1gKS50aGVuKCh7IGRhdGE6IHJlcyB9KSA9PiB7CiAgICAgICAgaWYgKHJlcy5jb2RlICE9PSAwKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKQogICAgICAgIH0KICAgICAgICB0aGlzLmRhdGFGb3JtID0gcmVzLmRhdGEKICAgICAgICB0aGlzLnF1aWxsRWRpdG9yLnJvb3QuaW5uZXJIVE1MID0gdGhpcy5kYXRhRm9ybS5jb250ZW50CiAgICAgIH0pLmNhdGNoKCgpID0+IHt9KQogICAgfSwKICAgIC8vIOihqOWNleaPkOS6pAogICAgZGF0YUZvcm1TdWJtaXRIYW5kbGU6IGRlYm91bmNlKGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy4kcmVmc1snZGF0YUZvcm0nXS52YWxpZGF0ZSgodmFsaWQpID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICB9CiAgICAgICAgdGhpcy4kaHR0cFshdGhpcy5kYXRhRm9ybS5pZCA/ICdwb3N0JyA6ICdwdXQnXSgKICAgICAgICAgICcvZGVtby9uZXdzJywKICAgICAgICAgIHRoaXMuZGF0YUZvcm0sCiAgICAgICAgICB7IGhlYWRlcnM6IHsgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnIH0gfQogICAgICAgICkudGhlbigoeyBkYXRhOiByZXMgfSkgPT4gewogICAgICAgICAgaWYgKHJlcy5jb2RlICE9PSAwKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpCiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogdGhpcy4kdCgncHJvbXB0LnN1Y2Nlc3MnKSwKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICBkdXJhdGlvbjogNTAwLAogICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiB7CiAgICAgICAgICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdyZWZyZXNoRGF0YUxpc3QnKQogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgIH0pLmNhdGNoKCgpID0+IHt9KQogICAgICB9KQogICAgfSwgMTAwMCwgeyAnbGVhZGluZyc6IHRydWUsICd0cmFpbGluZyc6IGZhbHNlIH0pCiAgfQp9Cg=="},null]}