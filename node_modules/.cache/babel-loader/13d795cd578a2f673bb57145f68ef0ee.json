{"remainingRequest":"E:\\frontCode\\security-enterprise-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\frontCode\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\frontCode\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\frontCode\\security-enterprise-admin\\src\\views\\modules\\notice\\notice-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\frontCode\\security-enterprise-admin\\src\\views\\modules\\notice\\notice-add-or-update.vue","mtime":1657251814346},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657251795729},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1657251794312},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657251795729},{"path":"E:\\frontCode\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1657251812566}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["notice-add-or-update.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-dialog :visible.sync=\"visible\" :title=\"!dataForm.id ? $t('add') : $t('update')\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" :label-width=\"$i18n.locale === 'en-US' ? '120px' : '80px'\">\r\n      <el-form-item :label=\"$t('notice.type')\" prop=\"type\">\r\n          <ren-radio-group v-model=\"dataForm.type\" dict-type=\"notice_type\"></ren-radio-group>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('notice.title')\"  prop=\"title\">\r\n          <el-input v-model=\"dataForm.title\" :placeholder=\"$t('notice.title')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"content\" :label=\"$t('notice.content')\">\r\n        <!-- 富文本编辑器, 容器 -->\r\n        <div id=\"J_quillEditor\" style=\"height:280px\"></div>\r\n        <!-- 自定义上传图片功能 (使用element upload组件) -->\r\n        <el-upload\r\n                :action=\"uploadUrl\"\r\n                :show-file-list=\"false\"\r\n                :before-upload=\"uploadBeforeUploadHandle\"\r\n                :on-success=\"uploadSuccessHandle\"\r\n                style=\"display: none;\">\r\n            <el-button ref=\"uploadBtn\" type=\"primary\" size=\"small\">{{ $t('upload.button') }}</el-button>\r\n        </el-upload>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('notice.receiverType')\" prop=\"\">\r\n          <el-radio-group v-model=\"dataForm.receiverType\">\r\n              <el-radio :label=\"0\">{{ $t('notice.receiverType0') }}</el-radio>\r\n              <el-radio :label=\"1\">{{ $t('notice.receiverType1') }}</el-radio>\r\n          </el-radio-group>\r\n      </el-form-item>\r\n      <el-form-item v-show=\"dataForm.receiverType == 1\" size=\"mini\" :label=\"$t('notice.selectDept')\">\r\n        <el-tree\r\n            :data=\"deptList\"\r\n            :props=\"{ label: 'name', children: 'children' }\"\r\n            node-key=\"id\"\r\n            ref=\"deptListTree\"\r\n            accordion\r\n            show-checkbox>\r\n        </el-tree>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template slot=\"footer\">\r\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\r\n      <el-button type=\"danger\" @click=\"dataFormSubmitHandle(0)\">{{ $t('notice.draft') }}</el-button>\r\n      <el-button type=\"primary\" @click=\"dataFormSubmitHandle(1)\">{{ $t('notice.release') }}</el-button>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport Cookies from 'js-cookie'\r\nimport debounce from 'lodash/debounce'\r\nimport 'quill/dist/quill.snow.css'\r\nimport Quill from 'quill'\r\nexport default {\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      quillEditor: null,\r\n      quillEditorToolbarOptions: [\r\n        ['bold', 'italic', 'underline', 'strike'],\r\n        ['image'],\r\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n        [{ 'size': ['small', false, 'large', 'huge'] }],\r\n        [{ 'color': [] }, { 'background': [] }],\r\n        ['clean']\r\n      ],\r\n      uploadUrl: '',\r\n      deptList: [],\r\n      dataForm: {\r\n        id: '',\r\n        type: 0,\r\n        title: '',\r\n        content: '',\r\n        receiverType: 0,\r\n        receiverTypeIds: '',\r\n        receiverTypeList: [],\r\n        status: '',\r\n        senderName: '',\r\n        senderDate: '',\r\n        creator: '',\r\n        createDate: ''\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dataRule () {\r\n      var validateContent = (rule, value, callback) => {\r\n        if (this.quillEditor.getLength() <= 1) {\r\n          return callback(new Error(this.$t('validate.required')))\r\n        }\r\n        callback()\r\n      }\r\n      return {\r\n        type: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        title: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        content: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' },\r\n          { validator: validateContent, trigger: 'blur' }\r\n        ],\r\n        receiverType: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        receiverTypeIds: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        status: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        senderName: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.visible = true\r\n      this.$nextTick(() => {\r\n        if (this.quillEditor) {\r\n          this.quillEditor.deleteText(0, this.quillEditor.getLength())\r\n        } else {\r\n          this.quillEditorHandle()\r\n        }\r\n        this.$refs['dataForm'].resetFields()\r\n        Promise.all([\r\n          this.getDeptList()\r\n        ]).then(() => {\r\n          if (this.dataForm.id) {\r\n            this.getInfo()\r\n          }\r\n        })\r\n      })\r\n    },\r\n    // 富文本编辑器\r\n    quillEditorHandle () {\r\n      this.quillEditor = new Quill('#J_quillEditor', {\r\n        modules: {\r\n          toolbar: this.quillEditorToolbarOptions\r\n        },\r\n        theme: 'snow'\r\n      })\r\n      // 自定义上传图片功能 (使用element upload组件)\r\n      this.uploadUrl = `${window.SITE_CONFIG['apiURL']}/sys/oss/upload?token=${Cookies.get('token')}`\r\n      this.quillEditor.getModule('toolbar').addHandler('image', () => {\r\n        this.$refs.uploadBtn.$el.click()\r\n      })\r\n      // 监听内容变化，动态赋值\r\n      this.quillEditor.on('text-change', () => {\r\n        this.dataForm.content = this.quillEditor.root.innerHTML\r\n      })\r\n    },\r\n    // 上传图片之前\r\n    uploadBeforeUploadHandle (file) {\r\n      if (file.type !== 'image/jpg' && file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/gif') {\r\n        this.$message.error(this.$t('upload.tip', { 'format': 'jpg、png、gif' }))\r\n        return false\r\n      }\r\n    },\r\n    // 上传图片成功\r\n    uploadSuccessHandle (res, file, fileList) {\r\n      if (res.code !== 0) {\r\n        return this.$message.error(res.msg)\r\n      }\r\n      this.quillEditor.insertEmbed(this.quillEditor.getSelection().index, 'image', res.data.src)\r\n    },\r\n    // 获取部门列表\r\n    getDeptList () {\r\n      return this.$http.get('/sys/dept/list').then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        this.deptList = res.data\r\n      }).catch(() => {})\r\n    },\r\n    // 获取信息\r\n    getInfo () {\r\n      this.$http.get(`/sys/notice/${this.dataForm.id}`).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        this.dataForm = {\r\n          ...this.dataForm,\r\n          ...res.data\r\n        }\r\n\r\n        this.quillEditor.root.innerHTML = this.dataForm.content\r\n\r\n        // 接受者为部门\r\n        if (this.dataForm.receiverType === 1) {\r\n          this.$refs.deptListTree.setCheckedKeys(res.data.receiverTypeIds.split(','))\r\n        }\r\n      }).catch(() => {})\r\n    },\r\n    // 表单提交\r\n    dataFormSubmitHandle: debounce(function (status) {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (!valid) {\r\n          return false\r\n        }\r\n        // 接受者为部门\r\n        if (this.dataForm.receiverType === 1) {\r\n          this.dataForm.receiverTypeIds = this.$refs.deptListTree.getCheckedKeys().join(',')\r\n          this.dataForm.receiverTypeList = this.$refs.deptListTree.getCheckedKeys()\r\n        } else {\r\n          this.dataForm.receiverTypeIds = ''\r\n        }\r\n        this.dataForm.status = status\r\n        this.$http[!this.dataForm.id ? 'post' : 'put']('/sys/notice/', this.dataForm).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            return this.$message.error(res.msg)\r\n          }\r\n          this.$message({\r\n            message: this.$t('prompt.success'),\r\n            type: 'success',\r\n            duration: 500,\r\n            onClose: () => {\r\n              this.visible = false\r\n              this.$emit('refreshDataList')\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      })\r\n    }, 1000, { 'leading': true, 'trailing': false })\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/modules/notice"}]}