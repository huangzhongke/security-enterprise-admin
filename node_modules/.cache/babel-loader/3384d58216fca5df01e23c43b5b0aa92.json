{"remainingRequest":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\src\\components\\ren-process-running\\src\\ren-task-handle.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\src\\components\\ren-process-running\\src\\ren-task-handle.vue","mtime":1595727761851},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\codeSpace\\security-enterprise-FrontBackSplit_2.7.0\\security-enterprise-2.7.0\\security-enterprise-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGRlYm91bmNlIGZyb20gJ2xvZGFzaC9kZWJvdW5jZSc7CmltcG9ydCBxcyBmcm9tICdxcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdmlzaWJsZTogZmFsc2UsCiAgICAgIGhhbmRsZVR5cGU6ICcnLAogICAgICBoYW5kbGVUaXRsZTogJycsCiAgICAgIGRhdGFGb3JtOiB7CiAgICAgICAgY29tbWVudDogJycsCiAgICAgICAgdGFza0lkOiAnJwogICAgICB9LAogICAgICAvLyDlm57osIPlh73mlbAKICAgICAgY2FsbGJhY2tzOiB7CiAgICAgICAgdGFza0hhbmRsZVN1Y2Nlc3NDYWxsYmFjazogbnVsbCwKICAgICAgICB0YXNrSGFuZGxlRXJyb3JDYWxsYmFjazogbnVsbAogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGRhdGFSdWxlOiBmdW5jdGlvbiBkYXRhUnVsZSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjb21tZW50OiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiB0aGlzLiR0KCd2YWxpZGF0ZS5yZXF1aXJlZCcpLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnZpc2libGUgPSB0cnVlOwoKICAgICAgaWYgKHRoaXMuaGFuZGxlVHlwZSA9PT0gJ2NvbXBsZXRlJykgewogICAgICAgIHRoaXMuaGFuZGxlVGl0bGUgPSB0aGlzLiR0KCdwcm9jZXNzLmNvbXBsZXRlVGFzaycpOwogICAgICB9IGVsc2UgaWYgKHRoaXMuaGFuZGxlVHlwZSA9PT0gJ3JlamVjdCcpIHsKICAgICAgICB0aGlzLmhhbmRsZVRpdGxlID0gdGhpcy4kdCgncHJvY2Vzcy5yZWplY3RUYXNrJyk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5oYW5kbGVUeXBlID09PSAndGVybWluYXRpb24nKSB7CiAgICAgICAgdGhpcy5oYW5kbGVUaXRsZSA9IHRoaXMuJHQoJ3Byb2Nlc3MudGVybWluYXRpb25UYXNrJyk7CiAgICAgIH0KCiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy4kcmVmc1snZGF0YUZvcm0nXS5yZXNldEZpZWxkcygpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDooajljZXmj5DkuqQKICAgIGRhdGFGb3JtU3VibWl0SGFuZGxlOiBmdW5jdGlvbiBkYXRhRm9ybVN1Ym1pdEhhbmRsZSgpIHsKICAgICAgaWYgKHRoaXMuaGFuZGxlVHlwZSA9PT0gJ2NvbXBsZXRlJykgewogICAgICAgIHRoaXMuY29tcGxldGVUYXNrKCk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5oYW5kbGVUeXBlID09PSAncmVqZWN0JykgewogICAgICAgIHRoaXMucmVqZWN0VGFzaygpOwogICAgICB9IGVsc2UgaWYgKHRoaXMuaGFuZGxlVHlwZSA9PT0gJ3Rlcm1pbmF0aW9uJykgewogICAgICAgIHRoaXMudGVybWluYXRpb25UYXNrKCk7CiAgICAgIH0KICAgIH0sCiAgICAvLyDpqbPlm54KICAgIHJlamVjdFRhc2s6IGRlYm91bmNlKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICghdmFsaWQpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CgogICAgICAgIGlmICghX3RoaXMyLmRhdGFGb3JtLnRhc2tJZCkgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgdmFyIHBhcmFtcyA9IHFzLnN0cmluZ2lmeSh7CiAgICAgICAgICAndGFza0lkJzogX3RoaXMyLmRhdGFGb3JtLnRhc2tJZCwKICAgICAgICAgICdjb21tZW50JzogX3RoaXMyLmRhdGFGb3JtLmNvbW1lbnQKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMyLiRodHRwWydwb3N0J10oJy9hY3QvdGFzay9iYWNrVG9GaXJzdD8nLCBwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICAgIHZhciByZXMgPSBfcmVmLmRhdGE7CgogICAgICAgICAgaWYgKHJlcy5jb2RlICE9PSAwKSB7CiAgICAgICAgICAgIF90aGlzMi4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKCiAgICAgICAgICAgIGlmIChfdGhpczIuY2FsbGJhY2tzLnRhc2tIYW5kbGVFcnJvckNhbGxiYWNrKSB7CiAgICAgICAgICAgICAgX3RoaXMyLmNhbGxiYWNrcy50YXNrSGFuZGxlRXJyb3JDYWxsYmFjayhyZXMpOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CgogICAgICAgICAgX3RoaXMyLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogX3RoaXMyLiR0KCdwcm9tcHQuc3VjY2VzcycpLAogICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAsCiAgICAgICAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uIG9uQ2xvc2UoKSB7CiAgICAgICAgICAgICAgX3RoaXMyLnZpc2libGUgPSBmYWxzZTsKCiAgICAgICAgICAgICAgaWYgKF90aGlzMi5jYWxsYmFja3MudGFza0hhbmRsZVN1Y2Nlc3NDYWxsYmFjaykgewogICAgICAgICAgICAgICAgX3RoaXMyLmNhbGxiYWNrcy50YXNrSGFuZGxlU3VjY2Vzc0NhbGxiYWNrKHJlcyk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LCAxMDAwLCB7CiAgICAgICdsZWFkaW5nJzogdHJ1ZSwKICAgICAgJ3RyYWlsaW5nJzogZmFsc2UKICAgIH0pLAogICAgLy8g6YCa6L+HCiAgICBjb21wbGV0ZVRhc2s6IGRlYm91bmNlKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICghdmFsaWQpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CgogICAgICAgIGlmICghX3RoaXMzLmRhdGFGb3JtLnRhc2tJZCkgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgdmFyIHBhcmFtcyA9IHFzLnN0cmluZ2lmeSh7CiAgICAgICAgICAndGFza0lkJzogX3RoaXMzLmRhdGFGb3JtLnRhc2tJZCwKICAgICAgICAgICdjb21tZW50JzogX3RoaXMzLmRhdGFGb3JtLmNvbW1lbnQKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMzLiRodHRwLnBvc3QoJy9hY3QvdGFzay9jb21wbGV0ZT8nICsgcGFyYW1zKS50aGVuKGZ1bmN0aW9uIChfcmVmMikgewogICAgICAgICAgdmFyIHJlcyA9IF9yZWYyLmRhdGE7CgogICAgICAgICAgaWYgKHJlcy5jb2RlICE9PSAwKSB7CiAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKCiAgICAgICAgICAgIGlmIChfdGhpczMuY2FsbGJhY2tzLnRhc2tIYW5kbGVFcnJvckNhbGxiYWNrKSB7CiAgICAgICAgICAgICAgX3RoaXMzLmNhbGxiYWNrcy50YXNrSGFuZGxlRXJyb3JDYWxsYmFjayhyZXMpOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CgogICAgICAgICAgX3RoaXMzLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogX3RoaXMzLiR0KCdwcm9tcHQuc3VjY2VzcycpLAogICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAsCiAgICAgICAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uIG9uQ2xvc2UoKSB7CiAgICAgICAgICAgICAgX3RoaXMzLnZpc2libGUgPSBmYWxzZTsKCiAgICAgICAgICAgICAgaWYgKF90aGlzMy5jYWxsYmFja3MudGFza0hhbmRsZVN1Y2Nlc3NDYWxsYmFjaykgewogICAgICAgICAgICAgICAgX3RoaXMzLmNhbGxiYWNrcy50YXNrSGFuZGxlU3VjY2Vzc0NhbGxiYWNrKHJlcyk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7fSk7CiAgICAgIH0pOwogICAgfSwgMTAwMCwgewogICAgICAnbGVhZGluZyc6IHRydWUsCiAgICAgICd0cmFpbGluZyc6IGZhbHNlCiAgICB9KSwKICAgIC8vIOe7iOatogogICAgdGVybWluYXRpb25UYXNrOiBkZWJvdW5jZShmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy4kcmVmc1snZGF0YUZvcm0nXS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBpZiAoIV90aGlzNC5kYXRhRm9ybS50YXNrSWQpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CgogICAgICAgIHZhciB0YXNrID0gcXMuc3RyaW5naWZ5KHsKICAgICAgICAgIHRhc2tJZDogX3RoaXM0LmRhdGFGb3JtLnRhc2tJZCwKICAgICAgICAgIGNvbW1lbnQ6IF90aGlzNC5kYXRhRm9ybS5jb21tZW50CiAgICAgICAgfSk7CgogICAgICAgIF90aGlzNC4kaHR0cFsncG9zdCddKCcvYWN0L3Rhc2svZW5kUHJvY2VzcycsIHRhc2spLnRoZW4oZnVuY3Rpb24gKF9yZWYzKSB7CiAgICAgICAgICB2YXIgcmVzID0gX3JlZjMuZGF0YTsKCiAgICAgICAgICBpZiAocmVzLmNvZGUgIT09IDApIHsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwoKICAgICAgICAgICAgaWYgKF90aGlzNC5jYWxsYmFja3MudGFza0hhbmRsZUVycm9yQ2FsbGJhY2spIHsKICAgICAgICAgICAgICBfdGhpczQuY2FsbGJhY2tzLnRhc2tIYW5kbGVFcnJvckNhbGxiYWNrKHJlcyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiBfdGhpczQuJHQoJ3Byb21wdC5zdWNjZXNzJyksCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgZHVyYXRpb246IDUwMCwKICAgICAgICAgICAgb25DbG9zZTogZnVuY3Rpb24gb25DbG9zZSgpIHsKICAgICAgICAgICAgICBfdGhpczQudmlzaWJsZSA9IGZhbHNlOwoKICAgICAgICAgICAgICBpZiAoX3RoaXM0LmNhbGxiYWNrcy50YXNrSGFuZGxlU3VjY2Vzc0NhbGxiYWNrKSB7CiAgICAgICAgICAgICAgICBfdGhpczQuY2FsbGJhY2tzLnRhc2tIYW5kbGVTdWNjZXNzQ2FsbGJhY2socmVzKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHt9KTsKICAgICAgfSk7CiAgICB9LCAxMDAwLCB7CiAgICAgICdsZWFkaW5nJzogdHJ1ZSwKICAgICAgJ3RyYWlsaW5nJzogZmFsc2UKICAgIH0pCiAgfQp9Ow=="},{"version":3,"sources":["ren-task-handle.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-dialog :visible.sync=\"visible\" :title=\"handleTitle\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmitHandle()\" :label-width=\"$i18n.locale === 'en-US' ? '120px' : '80px'\">\n      <el-form-item :label=\"$t('process.comment')\" prop=\"comment\">\n        <el-input type=\"textarea\" v-model=\"dataForm.comment\" :placeholder=\"$t('process.comment')\"></el-input>\n      </el-form-item>\n    </el-form>\n    <template slot=\"footer\">\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\n      <el-button type=\"primary\" @click=\"dataFormSubmitHandle()\">{{ $t('confirm') }}</el-button>\n    </template>\n  </el-dialog>\n</template>\n\n<script>\nimport debounce from 'lodash/debounce'\nimport qs from 'qs'\nexport default {\n  data () {\n    return {\n      visible: false,\n      handleType: '',\n      handleTitle: '',\n      dataForm: {\n        comment: '',\n        taskId: ''\n      },\n      // 回调函数\n      callbacks: {\n        taskHandleSuccessCallback: null,\n        taskHandleErrorCallback: null\n      }\n    }\n  },\n  computed: {\n    dataRule () {\n      return {\n        comment: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    init () {\n      this.visible = true\n      if (this.handleType === 'complete') {\n        this.handleTitle = this.$t('process.completeTask')\n      } else if (this.handleType === 'reject') {\n        this.handleTitle = this.$t('process.rejectTask')\n      } else if (this.handleType === 'termination') {\n        this.handleTitle = this.$t('process.terminationTask')\n      }\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n      })\n    },\n    // 表单提交\n    dataFormSubmitHandle () {\n      if (this.handleType === 'complete') {\n        this.completeTask()\n      } else if (this.handleType === 'reject') {\n        this.rejectTask()\n      } else if (this.handleType === 'termination') {\n        this.terminationTask()\n      }\n    },\n    // 驳回\n    rejectTask: debounce(function () {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) {\n          return false\n        }\n        if (!this.dataForm.taskId) {\n          return false\n        }\n        var params = qs.stringify({\n          'taskId': this.dataForm.taskId,\n          'comment': this.dataForm.comment\n        })\n        this.$http['post']('/act/task/backToFirst?', params).then(({ data: res }) => {\n          if (res.code !== 0) {\n            this.$message.error(res.msg)\n            if (this.callbacks.taskHandleErrorCallback) {\n              this.callbacks.taskHandleErrorCallback(res)\n            }\n            return\n          }\n          this.$message({\n            message: this.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: () => {\n              this.visible = false\n              if (this.callbacks.taskHandleSuccessCallback) {\n                this.callbacks.taskHandleSuccessCallback(res)\n              }\n            }\n          })\n        })\n      })\n    }, 1000, { 'leading': true, 'trailing': false }),\n    // 通过\n    completeTask: debounce(function () {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) {\n          return false\n        }\n        if (!this.dataForm.taskId) {\n          return false\n        }\n        var params = qs.stringify({\n          'taskId': this.dataForm.taskId,\n          'comment': this.dataForm.comment\n        })\n        this.$http.post('/act/task/complete?' + params).then(({ data: res }) => {\n          if (res.code !== 0) {\n            this.$message.error(res.msg)\n            if (this.callbacks.taskHandleErrorCallback) {\n              this.callbacks.taskHandleErrorCallback(res)\n            }\n            return\n          }\n          this.$message({\n            message: this.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: () => {\n              this.visible = false\n              if (this.callbacks.taskHandleSuccessCallback) {\n                this.callbacks.taskHandleSuccessCallback(res)\n              }\n            }\n          })\n        }).catch(() => {})\n      })\n    }, 1000, { 'leading': true, 'trailing': false }),\n    // 终止\n    terminationTask: debounce(function () {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) {\n          return false\n        }\n        if (!this.dataForm.taskId) {\n          return false\n        }\n        var task = qs.stringify({\n          taskId: this.dataForm.taskId,\n          comment: this.dataForm.comment\n        })\n        this.$http['post']('/act/task/endProcess', task).then(({ data: res }) => {\n          if (res.code !== 0) {\n            this.$message.error(res.msg)\n            if (this.callbacks.taskHandleErrorCallback) {\n              this.callbacks.taskHandleErrorCallback(res)\n            }\n            return\n          }\n          this.$message({\n            message: this.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: () => {\n              this.visible = false\n              if (this.callbacks.taskHandleSuccessCallback) {\n                this.callbacks.taskHandleSuccessCallback(res)\n              }\n            }\n          })\n        }).catch(() => {})\n      })\n    }, 1000, { 'leading': true, 'trailing': false })\n  }\n}\n</script>\n"],"sourceRoot":"src/components/ren-process-running/src"}]}